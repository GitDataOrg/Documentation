{
    "docs": [
        {
            "location": "/", 
            "text": "\u0427\u0442\u043e \u0442\u0430\u043a\u043e\u0435 ZeroNet?\n\n\nZeroNet \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442 \u043a\u0440\u0438\u043f\u0442\u043e\u0433\u0440\u0430\u0444\u0438\u044e Bitcoin \u0438 \u0442\u0435\u0445\u043d\u043e\u043b\u043e\u0433\u0438\u0438 \u043f\u0443\u0431\u043b\u0438\u043a\u0430\u0446\u0438\u0438 \u0434\u0430\u043d\u043d\u044b\u0445 BitTorrent \u0434\u043b\u044f \u043f\u043e\u0441\u0442\u0440\u043e\u0435\u043d\u0438\u044f \n\u0434\u0435\u0446\u0435\u043d\u0442\u0440\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u043d\u043d\u043e\u0439 \u0441\u0435\u0442\u0438, \u0441\u0442\u043e\u0439\u043a\u043e\u0439 \u043a \u0446\u0435\u043d\u0437\u0443\u0440\u0435\n.\n\n\n\u041f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0438 \u0441\u0435\u0442\u0438 \u043c\u043e\u0433\u0443\u0442 \u043e\u043f\u0443\u0431\u043b\u0438\u043a\u043e\u0432\u044b\u0432\u0430\u0442\u044c \u0432 \u0441\u0435\u0442\u0438 ZeroNet \u0432\u0435\u0431-\u0441\u0430\u0439\u0442\u044b, \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0449\u0438\u0435 \u0441\u0442\u0430\u0442\u0438\u0447\u043d\u044b\u0439 \u043b\u0438\u0431\u043e \u0434\u0438\u043d\u0430\u043c\u0438\u0447\u043d\u044b\u0439 \u043a\u043e\u043d\u0442\u0435\u043d\u0442, \u043d\u0430 \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043c\u043e\u0433\u0443\u0442 \u043f\u043e\u0434\u043f\u0438\u0441\u044b\u0432\u0430\u0442\u044c\u0441\u044f \u0438 \u0440\u0430\u0441\u043f\u0440\u043e\u0441\u0442\u0440\u0430\u043d\u044f\u0442\u044c \u0434\u0440\u0443\u0433\u0438\u0435 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0438. \u0412\u0435\u0431-\u0441\u0430\u0439\u0442\u044b \u0432\u0441\u0435\u0433\u0434\u0430 \u0431\u0443\u0434\u0443\u0442 \u0432 \u043e\u043d\u043b\u0430\u0439\u043d\u0435, \u0434\u0430\u0436\u0435 \u0435\u0441\u043b\u0438 \u0443 \u043d\u0435\u0433\u043e \u0432\u0441\u0435\u0433\u043e \u043e\u0434\u0438\u043d \u043f\u043e\u0434\u043f\u0438\u0441\u0447\u0438\u043a.\n\n\n\u041a\u043e\u0433\u0434\u0430 \u043a\u043e\u043d\u0442\u0435\u043d\u0442 \u0441\u0430\u0439\u0442\u0430 \u043e\u0431\u043d\u043e\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u0432\u043b\u0430\u0434\u0435\u043b\u044c\u0446\u0435\u043c, \u0432\u0441\u0435 \u0435\u0433\u043e \u043f\u043e\u0434\u043f\u0438\u0441\u0447\u0438\u043a\u0438 (\u043f\u0440\u043e\u0448\u043b\u044b\u0435 \u043f\u043e\u0441\u0435\u0442\u0438\u0442\u0435\u043b\u0438) \u043f\u043e\u043b\u0443\u0447\u0430\u044e\u0442 \u0442\u043e\u043b\u044c\u043a\u043e \u043e\u0431\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u0435 \u0434\u0430\u043d\u043d\u044b\u0435.\n\n\n\u0411\u0440\u0430\u0443\u0437\u0435\u0440 ZeroNet \u0440\u0430\u0441\u043f\u0440\u043e\u0441\u0442\u0440\u0430\u043d\u044f\u0435\u0442\u0441\u044f \u0441\u043e \u0432\u0441\u0442\u0440\u043e\u0435\u043d\u043d\u043e\u0439 \u0431\u0430\u0437\u043e\u0439 \u0434\u0430\u043d\u043d\u044b\u0445. \u0422\u0430\u043a\u043e\u0435 \u0440\u0435\u0448\u0435\u043d\u0438\u0435 \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u0443\u043f\u0440\u043e\u0441\u0442\u0438\u0442\u044c \u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u043a\u0443 \u0441\u0430\u0439\u0442\u043e\u0432, \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0449\u0438\u0445 \u0431\u043e\u043b\u044c\u0448\u043e\u0439 \u043e\u0431\u044a\u0435\u043c \u043a\u043e\u043d\u0442\u0435\u043d\u0442\u0430. \u0411\u0430\u0437\u0430 \u0434\u0430\u043d\u043d\u044b\u0445 \u0441\u0438\u043d\u0445\u0440\u043e\u043d\u0438\u0437\u0438\u0440\u0443\u0435\u0442\u0441\u044f \u0441 \u043f\u0443\u0431\u043b\u0438\u043a\u0443\u044e\u0449\u0438\u043c\u0438 \u0443\u0437\u043b\u0430\u043c\u0438 \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u0438\u043d\u043a\u0440\u0435\u043c\u0435\u043d\u0442\u043d\u043e\u0433\u043e \u043e\u0431\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u044f \u0434\u0430\u043d\u043d\u044b\u0445.\n\n\n\u0417\u0430\u0447\u0435\u043c \u044d\u0442\u043e?\n\n\n\n\n\u041c\u044b \u0432\u0435\u0440\u0438\u043c \u0432 \u043e\u0442\u043a\u0440\u044b\u0442\u0443\u044e, \u0441\u0432\u043e\u0431\u043e\u0434\u043d\u0443\u044e \u0438 \u0431\u0435\u0441\u0446\u0435\u043d\u0437\u0443\u0440\u043d\u0443\u044e \u0441\u0432\u044f\u0437\u044c.\n\n\n\u0411\u0435\u0437 \u0446\u0435\u043d\u0437\u0443\u0440\u044b: \u041d\u0435 \u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0443\u0435\u0442 \u0441\u043f\u043e\u0441\u043e\u0431\u0430 \u0443\u0434\u0430\u043b\u0438\u0442\u044c \u043e\u043f\u0443\u0431\u043b\u0438\u043a\u043e\u0432\u0430\u043d\u043d\u044b\u0435 \u043c\u0430\u0442\u0435\u0440\u0438\u0430\u043b\u044b.\n\n\n\u041e\u0442\u0441\u0443\u0442\u0441\u0442\u0432\u0438\u0435 \u0435\u0434\u0438\u043d\u043e\u0439 \u0442\u043e\u0447\u043a\u0438 \u043e\u0442\u043a\u0430\u0437\u0430: \u041a\u043e\u043d\u0442\u0435\u043d\u0442 \u043e\u0441\u0442\u0430\u0435\u0442\u0441\u044f \u0434\u043e\u0441\u0442\u0443\u043f\u043d\u044b\u043c \u0432 \u0441\u0435\u0442\u0438 \u043f\u043e\u043a\u0430 \u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0443\u0435\u0442 \u0445\u043e\u0442\u044f \u0431\u044b \u043e\u0434\u0438\u043d \u0440\u0430\u0432\u043d\u044b\u0439 \u043f\u043e\u0434\u043f\u0438\u0441\u0447\u0438\u043a.\n\n\n\u041d\u0435\u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e \u043f\u0440\u0438\u043a\u0440\u044b\u0442\u044c: \u042d\u0442\u043e \u043d\u0435 \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e, \u043f\u043e\u0442\u043e\u043c\u0443 \u0447\u0442\u043e \u0441\u0430\u0439\u0442 \u0445\u0440\u0430\u043d\u0438\u0442\u0441\u044f \u0432\u0435\u0437\u0434\u0435. \u0421\u043e\u0434\u0435\u0440\u0436\u0438\u043c\u043e\u0435 \u043f\u043e\u0434\u0434\u0435\u0440\u0436\u0438\u0432\u0430\u0435\u0442\u0441\u044f \u043b\u044e\u0431\u044b\u043c \u0436\u0435\u043b\u0430\u044e\u0449\u0438\u043c \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u043c.\n\n\n\u0411\u044b\u0441\u0442\u0440\u043e: ZeroNet \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442 \u0442\u0435\u0445\u043d\u043e\u043b\u043e\u0433\u0438\u044e BitTorrent \u0434\u043b\u044f \u0434\u043e\u0441\u0442\u0430\u0432\u043a\u0438 \u043a\u043e\u043d\u0442\u0435\u043d\u0442\u0430, \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u0431\u044b\u0441\u0442\u0440\u0435\u0435, \u0447\u0435\u043c \u043e\u0431\u044b\u0447\u043d\u044b\u0435 \u0432\u0435\u0431-\u0441\u0435\u0440\u0432\u0435\u0440\u044b.\n\n\n\u0420\u0430\u0431\u043e\u0442\u0430\u0435\u0442 \u0432 \u043e\u0444\u0444\u043b\u0430\u0439\u043d\u0435: \u0412\u044b \u043c\u043e\u0436\u0435\u0442\u0435 \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0434\u043e\u0441\u0442\u0443\u043f \u043a \u0441\u0430\u0439\u0442\u0443, \u0434\u0430\u0436\u0435 \u0435\u0441\u043b\u0438 \u043d\u0430 \u0434\u0430\u043d\u043d\u044b\u0439 \u043c\u043e\u043c\u0435\u043d\u0442 \u0443 \u0412\u0430\u0441 \u043e\u0442\u0441\u0443\u0442\u0441\u0442\u0432\u0443\u0435\u0442 \u0438\u043d\u0442\u0435\u0440\u043d\u0435\u0442.\n\n\n\u0411\u0435\u0437\u043e\u043f\u0430\u0441\u043d\u043e\u0441\u0442\u044c: \u041f\u043e\u0434\u0442\u0432\u0435\u0440\u0436\u0434\u0435\u043d\u0438\u0435 \u0430\u0432\u0442\u043e\u0440\u0441\u0442\u0432\u0430 \u043a\u043e\u043d\u0442\u0435\u043d\u0442\u0430 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442 \u0442\u0443 \u0436\u0435 \u0442\u0435\u0445\u043d\u043e\u043b\u043e\u0433\u0438\u0438 \u043a\u0440\u0438\u043f\u0442\u043e\u0433\u0440\u0430\u0444\u0438\u0438, \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u043e\u0431\u0435\u0441\u043f\u0435\u0447\u0438\u0432\u0430\u0435\u0442 \u0437\u0430\u0449\u0438\u0442\u0443 \u0432\u0430\u0448\u0435\u0433\u043e \u043a\u043e\u0448\u0435\u043b\u0435\u043a Bitcoin.\n\n\n\n\n\u041e\u0441\u043e\u0431\u0435\u043d\u043d\u043e\u0441\u0442\u0438\n\n\n\n\n\u041b\u0435\u0433\u043a\u043e, \u0440\u0430\u0431\u043e\u0442\u0430\u0435\u0442 \"\u0438\u0437 \u043a\u043e\u0440\u043e\u0431\u043a\u0438\".\n\n\n\u0411\u0435c\u043f\u0430\u0440\u043e\u043b\u044c\u043d\u0430\u044f \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u0430\u0446\u0438\u044f \nBIP32\n: \u0412\u0430\u0448\u0430 \u0443\u0447\u0435\u0442\u043d\u0430\u044f \u0437\u0430\u043f\u0438\u0441\u044c \u0437\u0430\u0449\u0438\u0449\u0435\u043d\u0430 \u0442\u0435\u0445\u043d\u043e\u043b\u043e\u0433\u0438\u0435\u0439 \u043a\u0440\u0438\u043f\u0442\u043e\u0433\u0440\u0430\u0444\u0438\u0438 Bitcoin, \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c\u043e\u0439 \u0432 \u044d\u043b\u0435\u043a\u0442\u0440\u043e\u043d\u043d\u044b\u0445 \u043a\u043e\u0448\u0435\u043b\u044c\u043a\u0430\u0445.\n\n\n\u041e\u0431\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u0435 \u0441\u0430\u0439\u0442\u043e\u0432 \u0432 \u0440\u0435\u0436\u0438\u043c\u0435 \u0440\u0435\u0430\u043b\u044c\u043d\u043e\u0433\u043e \u0432\u0440\u0435\u043c\u0435\u043d\u0438.\n\n\n\u041f\u043e\u0434\u0434\u0435\u0440\u0436\u043a\u0430 \u0434\u043e\u043c\u0435\u043d\u043e\u0432 .bit DNS-\u0441\u0438\u0441\u0442\u0435\u043c\u043e\u0439 Namecoin.\n\n\n\u041f\u043e\u0434\u0434\u0435\u0440\u0436\u043a\u0430 \u0431\u0430\u0437\u044b \u0434\u0430\u043d\u043d\u044b\u0445 SQL: \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u0443\u043f\u0440\u043e\u0441\u0442\u0438\u0442\u044c \u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u043a\u0443 \u0441\u0430\u0439\u0442\u0430 \u0438 \u043e\u0431\u0435\u0441\u043f\u0435\u0447\u0438\u0442\u044c \u0431\u043e\u043b\u0435\u0435 \u0431\u044b\u0441\u0442\u0440\u0443\u044e \u0437\u0430\u0433\u0440\u0443\u0437\u043a\u0443 \u0441\u0442\u0440\u0430\u043d\u0438\u0446.\n\n\n\u0410\u043d\u043e\u043d\u0438\u043c\u043d\u043e\u0441\u0442\u044c: \u041f\u043e\u043b\u043d\u0430\u044f \u043f\u043e\u0434\u0434\u0435\u0440\u0436\u043a\u0430 \u0441\u0435\u0442\u0438 Tor \u0441\u043e \u0441\u043a\u0440\u044b\u0442\u044b\u043c\u0438 \u0441\u0435\u0440\u0432\u0438\u0441\u0430\u043c\u0438 .onion \u0432 \u0437\u0430\u043c\u0435\u043d \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u044f \u0430\u0434\u0440\u0435\u0441\u043e\u0432 IPv4.\n\n\n\u041f\u043e\u0434\u0434\u0435\u0440\u0436\u043a\u0430 \u0448\u0438\u0444\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0445 \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0439 TLS.\n\n\n\u0410\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u0438\u0439, \u043e\u0442\u043a\u0440\u044b\u0442\u044b\u0439 uPnP-\u043f\u043e\u0440\u0442.\n\n\n\u041f\u043b\u0430\u0433\u0438\u043d \u0434\u043b\u044f \u043c\u043d\u043e\u0433\u043e\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u0441\u043a\u043e\u0439 \u043e\u0431\u0449\u0435\u0434\u043e\u0441\u0442\u0443\u043f\u043d\u043e\u0439 \u043f\u043e\u0434\u0434\u0435\u0440\u0436\u043a\u0438.\n\n\n\u0420\u0430\u0431\u043e\u0442\u0430\u0435\u0442 \u0432 \u043b\u044e\u0431\u043e\u043c \u0431\u0440\u0430\u0443\u0437\u0435\u0440\u043e\u043c \u043d\u0430 \u043b\u044e\u0431\u043e\u0439 \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u043e\u043d\u043d\u043e\u0439 \u0441\u0438\u0441\u0442\u0435\u043c\u0435.\n\n\n\n\n\u041a\u0430\u043a \u044d\u0442\u043e \u0440\u0430\u0431\u043e\u0442\u0430\u0435\u0442?\n\n\n\n\n\u041f\u043e\u0441\u043b\u0435 \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0438 \u0437\u0430\u043f\u0443\u0441\u043a\u0430 ZeroNet \u0412\u044b \u043e\u0442\u043a\u0440\u044b\u0432\u0430\u0435\u0442\u0435 \u0441\u0430\u0439\u0442\u044b, \u0434\u043e\u0441\u0442\u0443\u043f\u043d\u044b\u0435 \u043f\u043e \u0430\u0434\u0440\u0435\u0441\u0430\u043c:\n  \nhttp://127.0.0.1:43110/{zeronet_site_address}\n\n  (\u043d\u0430 \u043f\u0440\u0438\u043c\u0435\u0440  \nhttp://127.0.0.1:43110/1HeLLo4uzjaLetFx6NH3PMwFP3qbRbTf3D\n).\n\n\nZeroNet \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442 \u0441\u0435\u0442\u044c BitTorrent, \u0447\u0442\u043e\u0431\u044b \u043d\u0430\u0439\u0442\u0438 \u043a\u043e\u043b\u043b\u0435\u0433, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043f\u0443\u0431\u043b\u0438\u043a\u0443\u044e\u0442 \u044d\u0442\u043e\u0442 \u0441\u0430\u0439\u0442 \u0438 \u043f\u043e\u043b\u0443\u0447\u0430\u044e\u0442 \u043e\u0442 \u043d\u0438\u0445 \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u043c\u043e\u0435 (HTML, CSS, JS ...).\n\n\n\u041a\u0430\u0436\u0434\u044b\u0439 \u0440\u0430\u0437, \u043f\u043e\u0441\u0435\u0449\u0430\u044f \u0441\u0430\u0439\u0442\u044b, \u0412\u044b \u043d\u0430\u0447\u0438\u043d\u0430\u0435\u0442\u0435 \u0440\u0430\u0441\u043f\u0440\u043e\u0441\u0442\u0440\u0430\u043d\u044f\u0442\u044c \u0441\u043a\u0430\u0447\u0435\u043d\u043d\u044b\u0439 \u043a\u043e\u043d\u0442\u0435\u043d\u0442 \u043e\u0441\u0442\u0430\u043b\u044c\u043d\u044b\u043c.\n\n\n\u041a\u0430\u0436\u0434\u044b\u0439 \u0441\u0430\u0439\u0442 \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442 \u0441\u043f\u0438\u0441\u043e\u043a \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c\u044b\u0445 \u0444\u0430\u0439\u043b\u043e\u0432 \u0441 \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u043e\u0439 sha512 \u0445\u044d\u0448\u0430 \u0438 \u043f\u043e\u0434\u043f\u0438\u0441\u0438, \u0433\u0435\u043d\u0435\u0440\u0438\u0440\u0443\u0435\u043c\u043e\u0439 \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u0441\u0435\u043a\u0440\u0435\u0442\u043d\u043e\u0433\u043e \u043a\u043b\u044e\u0447\u0430 \u0430\u0432\u0442\u043e\u0440\u0430 \u0441\u0430\u0439\u0442\u0430.\n\n\n\u0415\u0441\u043b\u0438 \u0432\u043b\u0430\u0434\u0435\u043b\u0435\u0446 \u0441\u0430\u0439\u0442\u0430 \u043e\u0442\u0440\u0435\u0434\u0430\u043a\u0442\u0438\u0440\u0443\u0435\u0442 \u0441\u0432\u043e\u0439 \u0441\u0430\u0439\u0442, \u0442\u043e \u043e\u043d \u0437\u0430\u043d\u043e\u0432\u043e \u043f\u043e\u0434\u043f\u0438\u0441\u044b\u0432\u0430\u0435\u0442 \u0432\u0435\u0441\u044c \u0441\u043f\u0438\u0441\u043e\u043a \u0438 \u043f\u0443\u0431\u043b\u0438\u043a\u0443\u0435\u0442 \u0435\u0433\u043e \u0441\u0440\u0435\u0434\u0438 \u043f\u043e\u0434\u043f\u0438\u0441\u0447\u0438\u043a\u043e\u0432.\n  \u041f\u043e\u0441\u043b\u0435 \u0442\u043e\u0433\u043e, \u043a\u0430\u043a \u043f\u043e\u0434\u043f\u0438\u0441\u0447\u0438\u043a\u0438 \u043f\u0440\u043e\u0432\u0435\u0440\u044f\u0442 \u0446\u0435\u043b\u043e\u0441\u0442\u043d\u043e\u0441\u0442\u044c \u0438 \u0434\u043e\u0441\u0442\u043e\u0432\u0435\u0440\u043d\u043e\u0441\u0442\u044c \u043d\u043e\u0432\u043e\u0433\u043e \u043a\u043e\u043d\u0442\u0435\u043d\u0442\u0430, \u043e\u043d\u0438 \u0441\u043a\u0430\u0447\u0438\u0432\u0430\u044e\u0442 \u043e\u0431\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u044f \u0438 \u0440\u0430\u0441\u043f\u0440\u043e\u0441\u0442\u0440\u0430\u043d\u044f\u044e\u0442 \u0438\u0445 \u043e\u0441\u0442\u0430\u043b\u044c\u043d\u044b\u043c.\n\n\n\n\n\u041f\u0440\u0435\u0437\u0435\u043d\u0442\u0430\u0446\u0438\u044f \u043d\u0430 \u0442\u0435\u043c\u0443 \u0442\u0435\u0445\u043d\u043e\u043b\u043e\u0433\u0438\u0438 \u043a\u0440\u0438\u043f\u0442\u043e\u0433\u0440\u0430\u0444\u0438\u0438 ZeroNet, \u043e\u0431\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u044f \u043a\u043e\u043d\u0442\u0435\u043d\u0442\u0430 \u0441\u0430\u0439\u0442\u0430 \u0438 \u043c\u043d\u043e\u0433\u043e\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u0441\u043a\u043e\u0433\u043e \u0440\u0430\u0441\u043f\u0440\u043e\u0441\u0442\u0440\u0430\u043d\u0435\u043d\u0438\u044f \u0441\u0430\u0439\u0442\u043e\u0432 \n\n\n\u0421\u043a\u0440\u0438\u043d\u0448\u043e\u0442\u044b\n\n\n\n\n\n\n\u0415\u0449\u0435 \u0441\u043a\u0440\u0438\u043d\u0448\u043e\u0442\u044b \n\n\n\u0421\u0443\u0449\u0435\u0441\u0442\u0432\u0443\u044e\u0449\u0438\u0435 \u043e\u0433\u0440\u0430\u043d\u0438\u0447\u0435\u043d\u0438\u044f\n\n\n\n\n\u041e\u0442\u0441\u0443\u0442\u0441\u0442\u0432\u0438\u0435 \u043f\u043e\u0434\u0434\u0435\u0440\u0436\u043a\u0438 torrent-\u0442\u0435\u0445\u043d\u043e\u043b\u043e\u0433\u0438\u0438 \u0440\u0430\u0437\u0434\u0435\u043b\u0435\u043d\u0438\u044f \u0431\u043e\u043b\u044c\u0448\u0438\u0445 \u0444\u0430\u0439\u043b\u043e\u0432\n\n\n\u041e\u0442\u0441\u0443\u0442\u0441\u0442\u0432\u0438\u0435 \u0441\u0436\u0430\u0442\u0438\u044f \u0438 \u0448\u0438\u0444\u0440\u043e\u0432\u0430\u043d\u0438\u044f (\u043f\u043e\u043a\u0430) \u043f\u0440\u0438 \u043f\u0435\u0440\u0435\u0434\u0430\u0447\u0438 \u0434\u0430\u043d\u043d\u044b\u0445 (\u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f TLS \u0448\u0438\u0444\u0440\u043e\u0432\u0430\u043d\u0438\u0435)\n\n\n\u041e\u0442\u0441\u0443\u0442\u0441\u0442\u0432\u0438\u0435 \u0441\u0430\u0439\u0442\u043e\u0432 \u0441 \u043e\u0433\u0440\u0430\u043d\u0438\u0447\u0435\u043d\u043d\u044b\u043c \u0434\u043e\u0441\u0442\u0443\u043f\u043e\u043c\n\n\n\n\n\u041f\u043e\u043c\u043e\u0449\u044c \u0434\u043b\u044f \u043f\u043e\u0434\u0434\u0435\u0440\u0436\u0430\u043d\u0438\u0438 \u043f\u0440\u043e\u0435\u043a\u0442\u0430\n\n\nBitcoin: 1QDhxQ6PraUZa21ET5fYUCPgdrwBomnFgX\n\n\n\u0411\u043b\u0430\u0433\u043e\u0434\u0430\u0440\u043d\u043e\u0441\u0442\u044c!\n\n\n\n\n\u0411\u043e\u043b\u044c\u0448\u0435 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0438 \u043e \u043f\u043e\u0434\u0434\u0435\u0440\u0436\u043a\u0435, \u043e\u0431\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u0439 \u0438 \u043d\u043e\u0432\u044b\u0445 \u0441\u0430\u0439\u0442\u043e\u0432 ZeroNet \u043c\u043e\u0436\u043d\u043e \u043d\u0430\u0439\u0442\u0438: \nhttp://www.reddit.com/r/zeronet/\n\n\n\u041d\u0430\u0448 \u043e\u0444\u0438\u0446\u0438\u0430\u043b\u044c\u043d\u044b\u0439 \u0447\u0430\u0442: \n#zeronet @ FreeNode\n or on \ngitter", 
            "title": "\u0412\u0432\u0435\u0434\u0435\u043d\u0438\u0435"
        }, 
        {
            "location": "/#zeronet", 
            "text": "ZeroNet \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442 \u043a\u0440\u0438\u043f\u0442\u043e\u0433\u0440\u0430\u0444\u0438\u044e Bitcoin \u0438 \u0442\u0435\u0445\u043d\u043e\u043b\u043e\u0433\u0438\u0438 \u043f\u0443\u0431\u043b\u0438\u043a\u0430\u0446\u0438\u0438 \u0434\u0430\u043d\u043d\u044b\u0445 BitTorrent \u0434\u043b\u044f \u043f\u043e\u0441\u0442\u0440\u043e\u0435\u043d\u0438\u044f  \u0434\u0435\u0446\u0435\u043d\u0442\u0440\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u043d\u043d\u043e\u0439 \u0441\u0435\u0442\u0438, \u0441\u0442\u043e\u0439\u043a\u043e\u0439 \u043a \u0446\u0435\u043d\u0437\u0443\u0440\u0435 .  \u041f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0438 \u0441\u0435\u0442\u0438 \u043c\u043e\u0433\u0443\u0442 \u043e\u043f\u0443\u0431\u043b\u0438\u043a\u043e\u0432\u044b\u0432\u0430\u0442\u044c \u0432 \u0441\u0435\u0442\u0438 ZeroNet \u0432\u0435\u0431-\u0441\u0430\u0439\u0442\u044b, \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0449\u0438\u0435 \u0441\u0442\u0430\u0442\u0438\u0447\u043d\u044b\u0439 \u043b\u0438\u0431\u043e \u0434\u0438\u043d\u0430\u043c\u0438\u0447\u043d\u044b\u0439 \u043a\u043e\u043d\u0442\u0435\u043d\u0442, \u043d\u0430 \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043c\u043e\u0433\u0443\u0442 \u043f\u043e\u0434\u043f\u0438\u0441\u044b\u0432\u0430\u0442\u044c\u0441\u044f \u0438 \u0440\u0430\u0441\u043f\u0440\u043e\u0441\u0442\u0440\u0430\u043d\u044f\u0442\u044c \u0434\u0440\u0443\u0433\u0438\u0435 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0438. \u0412\u0435\u0431-\u0441\u0430\u0439\u0442\u044b \u0432\u0441\u0435\u0433\u0434\u0430 \u0431\u0443\u0434\u0443\u0442 \u0432 \u043e\u043d\u043b\u0430\u0439\u043d\u0435, \u0434\u0430\u0436\u0435 \u0435\u0441\u043b\u0438 \u0443 \u043d\u0435\u0433\u043e \u0432\u0441\u0435\u0433\u043e \u043e\u0434\u0438\u043d \u043f\u043e\u0434\u043f\u0438\u0441\u0447\u0438\u043a.  \u041a\u043e\u0433\u0434\u0430 \u043a\u043e\u043d\u0442\u0435\u043d\u0442 \u0441\u0430\u0439\u0442\u0430 \u043e\u0431\u043d\u043e\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u0432\u043b\u0430\u0434\u0435\u043b\u044c\u0446\u0435\u043c, \u0432\u0441\u0435 \u0435\u0433\u043e \u043f\u043e\u0434\u043f\u0438\u0441\u0447\u0438\u043a\u0438 (\u043f\u0440\u043e\u0448\u043b\u044b\u0435 \u043f\u043e\u0441\u0435\u0442\u0438\u0442\u0435\u043b\u0438) \u043f\u043e\u043b\u0443\u0447\u0430\u044e\u0442 \u0442\u043e\u043b\u044c\u043a\u043e \u043e\u0431\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u0435 \u0434\u0430\u043d\u043d\u044b\u0435.  \u0411\u0440\u0430\u0443\u0437\u0435\u0440 ZeroNet \u0440\u0430\u0441\u043f\u0440\u043e\u0441\u0442\u0440\u0430\u043d\u044f\u0435\u0442\u0441\u044f \u0441\u043e \u0432\u0441\u0442\u0440\u043e\u0435\u043d\u043d\u043e\u0439 \u0431\u0430\u0437\u043e\u0439 \u0434\u0430\u043d\u043d\u044b\u0445. \u0422\u0430\u043a\u043e\u0435 \u0440\u0435\u0448\u0435\u043d\u0438\u0435 \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u0443\u043f\u0440\u043e\u0441\u0442\u0438\u0442\u044c \u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u043a\u0443 \u0441\u0430\u0439\u0442\u043e\u0432, \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0449\u0438\u0445 \u0431\u043e\u043b\u044c\u0448\u043e\u0439 \u043e\u0431\u044a\u0435\u043c \u043a\u043e\u043d\u0442\u0435\u043d\u0442\u0430. \u0411\u0430\u0437\u0430 \u0434\u0430\u043d\u043d\u044b\u0445 \u0441\u0438\u043d\u0445\u0440\u043e\u043d\u0438\u0437\u0438\u0440\u0443\u0435\u0442\u0441\u044f \u0441 \u043f\u0443\u0431\u043b\u0438\u043a\u0443\u044e\u0449\u0438\u043c\u0438 \u0443\u0437\u043b\u0430\u043c\u0438 \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u0438\u043d\u043a\u0440\u0435\u043c\u0435\u043d\u0442\u043d\u043e\u0433\u043e \u043e\u0431\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u044f \u0434\u0430\u043d\u043d\u044b\u0445.", 
            "title": "\u0427\u0442\u043e \u0442\u0430\u043a\u043e\u0435 ZeroNet?"
        }, 
        {
            "location": "/#_1", 
            "text": "\u041c\u044b \u0432\u0435\u0440\u0438\u043c \u0432 \u043e\u0442\u043a\u0440\u044b\u0442\u0443\u044e, \u0441\u0432\u043e\u0431\u043e\u0434\u043d\u0443\u044e \u0438 \u0431\u0435\u0441\u0446\u0435\u043d\u0437\u0443\u0440\u043d\u0443\u044e \u0441\u0432\u044f\u0437\u044c.  \u0411\u0435\u0437 \u0446\u0435\u043d\u0437\u0443\u0440\u044b: \u041d\u0435 \u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0443\u0435\u0442 \u0441\u043f\u043e\u0441\u043e\u0431\u0430 \u0443\u0434\u0430\u043b\u0438\u0442\u044c \u043e\u043f\u0443\u0431\u043b\u0438\u043a\u043e\u0432\u0430\u043d\u043d\u044b\u0435 \u043c\u0430\u0442\u0435\u0440\u0438\u0430\u043b\u044b.  \u041e\u0442\u0441\u0443\u0442\u0441\u0442\u0432\u0438\u0435 \u0435\u0434\u0438\u043d\u043e\u0439 \u0442\u043e\u0447\u043a\u0438 \u043e\u0442\u043a\u0430\u0437\u0430: \u041a\u043e\u043d\u0442\u0435\u043d\u0442 \u043e\u0441\u0442\u0430\u0435\u0442\u0441\u044f \u0434\u043e\u0441\u0442\u0443\u043f\u043d\u044b\u043c \u0432 \u0441\u0435\u0442\u0438 \u043f\u043e\u043a\u0430 \u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0443\u0435\u0442 \u0445\u043e\u0442\u044f \u0431\u044b \u043e\u0434\u0438\u043d \u0440\u0430\u0432\u043d\u044b\u0439 \u043f\u043e\u0434\u043f\u0438\u0441\u0447\u0438\u043a.  \u041d\u0435\u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e \u043f\u0440\u0438\u043a\u0440\u044b\u0442\u044c: \u042d\u0442\u043e \u043d\u0435 \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e, \u043f\u043e\u0442\u043e\u043c\u0443 \u0447\u0442\u043e \u0441\u0430\u0439\u0442 \u0445\u0440\u0430\u043d\u0438\u0442\u0441\u044f \u0432\u0435\u0437\u0434\u0435. \u0421\u043e\u0434\u0435\u0440\u0436\u0438\u043c\u043e\u0435 \u043f\u043e\u0434\u0434\u0435\u0440\u0436\u0438\u0432\u0430\u0435\u0442\u0441\u044f \u043b\u044e\u0431\u044b\u043c \u0436\u0435\u043b\u0430\u044e\u0449\u0438\u043c \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u043c.  \u0411\u044b\u0441\u0442\u0440\u043e: ZeroNet \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442 \u0442\u0435\u0445\u043d\u043e\u043b\u043e\u0433\u0438\u044e BitTorrent \u0434\u043b\u044f \u0434\u043e\u0441\u0442\u0430\u0432\u043a\u0438 \u043a\u043e\u043d\u0442\u0435\u043d\u0442\u0430, \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u0431\u044b\u0441\u0442\u0440\u0435\u0435, \u0447\u0435\u043c \u043e\u0431\u044b\u0447\u043d\u044b\u0435 \u0432\u0435\u0431-\u0441\u0435\u0440\u0432\u0435\u0440\u044b.  \u0420\u0430\u0431\u043e\u0442\u0430\u0435\u0442 \u0432 \u043e\u0444\u0444\u043b\u0430\u0439\u043d\u0435: \u0412\u044b \u043c\u043e\u0436\u0435\u0442\u0435 \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0434\u043e\u0441\u0442\u0443\u043f \u043a \u0441\u0430\u0439\u0442\u0443, \u0434\u0430\u0436\u0435 \u0435\u0441\u043b\u0438 \u043d\u0430 \u0434\u0430\u043d\u043d\u044b\u0439 \u043c\u043e\u043c\u0435\u043d\u0442 \u0443 \u0412\u0430\u0441 \u043e\u0442\u0441\u0443\u0442\u0441\u0442\u0432\u0443\u0435\u0442 \u0438\u043d\u0442\u0435\u0440\u043d\u0435\u0442.  \u0411\u0435\u0437\u043e\u043f\u0430\u0441\u043d\u043e\u0441\u0442\u044c: \u041f\u043e\u0434\u0442\u0432\u0435\u0440\u0436\u0434\u0435\u043d\u0438\u0435 \u0430\u0432\u0442\u043e\u0440\u0441\u0442\u0432\u0430 \u043a\u043e\u043d\u0442\u0435\u043d\u0442\u0430 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442 \u0442\u0443 \u0436\u0435 \u0442\u0435\u0445\u043d\u043e\u043b\u043e\u0433\u0438\u0438 \u043a\u0440\u0438\u043f\u0442\u043e\u0433\u0440\u0430\u0444\u0438\u0438, \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u043e\u0431\u0435\u0441\u043f\u0435\u0447\u0438\u0432\u0430\u0435\u0442 \u0437\u0430\u0449\u0438\u0442\u0443 \u0432\u0430\u0448\u0435\u0433\u043e \u043a\u043e\u0448\u0435\u043b\u0435\u043a Bitcoin.", 
            "title": "\u0417\u0430\u0447\u0435\u043c \u044d\u0442\u043e?"
        }, 
        {
            "location": "/#_2", 
            "text": "\u041b\u0435\u0433\u043a\u043e, \u0440\u0430\u0431\u043e\u0442\u0430\u0435\u0442 \"\u0438\u0437 \u043a\u043e\u0440\u043e\u0431\u043a\u0438\".  \u0411\u0435c\u043f\u0430\u0440\u043e\u043b\u044c\u043d\u0430\u044f \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u0430\u0446\u0438\u044f  BIP32 : \u0412\u0430\u0448\u0430 \u0443\u0447\u0435\u0442\u043d\u0430\u044f \u0437\u0430\u043f\u0438\u0441\u044c \u0437\u0430\u0449\u0438\u0449\u0435\u043d\u0430 \u0442\u0435\u0445\u043d\u043e\u043b\u043e\u0433\u0438\u0435\u0439 \u043a\u0440\u0438\u043f\u0442\u043e\u0433\u0440\u0430\u0444\u0438\u0438 Bitcoin, \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c\u043e\u0439 \u0432 \u044d\u043b\u0435\u043a\u0442\u0440\u043e\u043d\u043d\u044b\u0445 \u043a\u043e\u0448\u0435\u043b\u044c\u043a\u0430\u0445.  \u041e\u0431\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u0435 \u0441\u0430\u0439\u0442\u043e\u0432 \u0432 \u0440\u0435\u0436\u0438\u043c\u0435 \u0440\u0435\u0430\u043b\u044c\u043d\u043e\u0433\u043e \u0432\u0440\u0435\u043c\u0435\u043d\u0438.  \u041f\u043e\u0434\u0434\u0435\u0440\u0436\u043a\u0430 \u0434\u043e\u043c\u0435\u043d\u043e\u0432 .bit DNS-\u0441\u0438\u0441\u0442\u0435\u043c\u043e\u0439 Namecoin.  \u041f\u043e\u0434\u0434\u0435\u0440\u0436\u043a\u0430 \u0431\u0430\u0437\u044b \u0434\u0430\u043d\u043d\u044b\u0445 SQL: \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u0443\u043f\u0440\u043e\u0441\u0442\u0438\u0442\u044c \u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u043a\u0443 \u0441\u0430\u0439\u0442\u0430 \u0438 \u043e\u0431\u0435\u0441\u043f\u0435\u0447\u0438\u0442\u044c \u0431\u043e\u043b\u0435\u0435 \u0431\u044b\u0441\u0442\u0440\u0443\u044e \u0437\u0430\u0433\u0440\u0443\u0437\u043a\u0443 \u0441\u0442\u0440\u0430\u043d\u0438\u0446.  \u0410\u043d\u043e\u043d\u0438\u043c\u043d\u043e\u0441\u0442\u044c: \u041f\u043e\u043b\u043d\u0430\u044f \u043f\u043e\u0434\u0434\u0435\u0440\u0436\u043a\u0430 \u0441\u0435\u0442\u0438 Tor \u0441\u043e \u0441\u043a\u0440\u044b\u0442\u044b\u043c\u0438 \u0441\u0435\u0440\u0432\u0438\u0441\u0430\u043c\u0438 .onion \u0432 \u0437\u0430\u043c\u0435\u043d \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u044f \u0430\u0434\u0440\u0435\u0441\u043e\u0432 IPv4.  \u041f\u043e\u0434\u0434\u0435\u0440\u0436\u043a\u0430 \u0448\u0438\u0444\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0445 \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0439 TLS.  \u0410\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u0438\u0439, \u043e\u0442\u043a\u0440\u044b\u0442\u044b\u0439 uPnP-\u043f\u043e\u0440\u0442.  \u041f\u043b\u0430\u0433\u0438\u043d \u0434\u043b\u044f \u043c\u043d\u043e\u0433\u043e\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u0441\u043a\u043e\u0439 \u043e\u0431\u0449\u0435\u0434\u043e\u0441\u0442\u0443\u043f\u043d\u043e\u0439 \u043f\u043e\u0434\u0434\u0435\u0440\u0436\u043a\u0438.  \u0420\u0430\u0431\u043e\u0442\u0430\u0435\u0442 \u0432 \u043b\u044e\u0431\u043e\u043c \u0431\u0440\u0430\u0443\u0437\u0435\u0440\u043e\u043c \u043d\u0430 \u043b\u044e\u0431\u043e\u0439 \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u043e\u043d\u043d\u043e\u0439 \u0441\u0438\u0441\u0442\u0435\u043c\u0435.", 
            "title": "\u041e\u0441\u043e\u0431\u0435\u043d\u043d\u043e\u0441\u0442\u0438"
        }, 
        {
            "location": "/#_3", 
            "text": "\u041f\u043e\u0441\u043b\u0435 \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0438 \u0437\u0430\u043f\u0443\u0441\u043a\u0430 ZeroNet \u0412\u044b \u043e\u0442\u043a\u0440\u044b\u0432\u0430\u0435\u0442\u0435 \u0441\u0430\u0439\u0442\u044b, \u0434\u043e\u0441\u0442\u0443\u043f\u043d\u044b\u0435 \u043f\u043e \u0430\u0434\u0440\u0435\u0441\u0430\u043c:\n   http://127.0.0.1:43110/{zeronet_site_address} \n  (\u043d\u0430 \u043f\u0440\u0438\u043c\u0435\u0440   http://127.0.0.1:43110/1HeLLo4uzjaLetFx6NH3PMwFP3qbRbTf3D ).  ZeroNet \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442 \u0441\u0435\u0442\u044c BitTorrent, \u0447\u0442\u043e\u0431\u044b \u043d\u0430\u0439\u0442\u0438 \u043a\u043e\u043b\u043b\u0435\u0433, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043f\u0443\u0431\u043b\u0438\u043a\u0443\u044e\u0442 \u044d\u0442\u043e\u0442 \u0441\u0430\u0439\u0442 \u0438 \u043f\u043e\u043b\u0443\u0447\u0430\u044e\u0442 \u043e\u0442 \u043d\u0438\u0445 \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u043c\u043e\u0435 (HTML, CSS, JS ...).  \u041a\u0430\u0436\u0434\u044b\u0439 \u0440\u0430\u0437, \u043f\u043e\u0441\u0435\u0449\u0430\u044f \u0441\u0430\u0439\u0442\u044b, \u0412\u044b \u043d\u0430\u0447\u0438\u043d\u0430\u0435\u0442\u0435 \u0440\u0430\u0441\u043f\u0440\u043e\u0441\u0442\u0440\u0430\u043d\u044f\u0442\u044c \u0441\u043a\u0430\u0447\u0435\u043d\u043d\u044b\u0439 \u043a\u043e\u043d\u0442\u0435\u043d\u0442 \u043e\u0441\u0442\u0430\u043b\u044c\u043d\u044b\u043c.  \u041a\u0430\u0436\u0434\u044b\u0439 \u0441\u0430\u0439\u0442 \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442 \u0441\u043f\u0438\u0441\u043e\u043a \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c\u044b\u0445 \u0444\u0430\u0439\u043b\u043e\u0432 \u0441 \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u043e\u0439 sha512 \u0445\u044d\u0448\u0430 \u0438 \u043f\u043e\u0434\u043f\u0438\u0441\u0438, \u0433\u0435\u043d\u0435\u0440\u0438\u0440\u0443\u0435\u043c\u043e\u0439 \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u0441\u0435\u043a\u0440\u0435\u0442\u043d\u043e\u0433\u043e \u043a\u043b\u044e\u0447\u0430 \u0430\u0432\u0442\u043e\u0440\u0430 \u0441\u0430\u0439\u0442\u0430.  \u0415\u0441\u043b\u0438 \u0432\u043b\u0430\u0434\u0435\u043b\u0435\u0446 \u0441\u0430\u0439\u0442\u0430 \u043e\u0442\u0440\u0435\u0434\u0430\u043a\u0442\u0438\u0440\u0443\u0435\u0442 \u0441\u0432\u043e\u0439 \u0441\u0430\u0439\u0442, \u0442\u043e \u043e\u043d \u0437\u0430\u043d\u043e\u0432\u043e \u043f\u043e\u0434\u043f\u0438\u0441\u044b\u0432\u0430\u0435\u0442 \u0432\u0435\u0441\u044c \u0441\u043f\u0438\u0441\u043e\u043a \u0438 \u043f\u0443\u0431\u043b\u0438\u043a\u0443\u0435\u0442 \u0435\u0433\u043e \u0441\u0440\u0435\u0434\u0438 \u043f\u043e\u0434\u043f\u0438\u0441\u0447\u0438\u043a\u043e\u0432.\n  \u041f\u043e\u0441\u043b\u0435 \u0442\u043e\u0433\u043e, \u043a\u0430\u043a \u043f\u043e\u0434\u043f\u0438\u0441\u0447\u0438\u043a\u0438 \u043f\u0440\u043e\u0432\u0435\u0440\u044f\u0442 \u0446\u0435\u043b\u043e\u0441\u0442\u043d\u043e\u0441\u0442\u044c \u0438 \u0434\u043e\u0441\u0442\u043e\u0432\u0435\u0440\u043d\u043e\u0441\u0442\u044c \u043d\u043e\u0432\u043e\u0433\u043e \u043a\u043e\u043d\u0442\u0435\u043d\u0442\u0430, \u043e\u043d\u0438 \u0441\u043a\u0430\u0447\u0438\u0432\u0430\u044e\u0442 \u043e\u0431\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u044f \u0438 \u0440\u0430\u0441\u043f\u0440\u043e\u0441\u0442\u0440\u0430\u043d\u044f\u044e\u0442 \u0438\u0445 \u043e\u0441\u0442\u0430\u043b\u044c\u043d\u044b\u043c.", 
            "title": "\u041a\u0430\u043a \u044d\u0442\u043e \u0440\u0430\u0431\u043e\u0442\u0430\u0435\u0442?"
        }, 
        {
            "location": "/#zeronet_1", 
            "text": "", 
            "title": "\u041f\u0440\u0435\u0437\u0435\u043d\u0442\u0430\u0446\u0438\u044f \u043d\u0430 \u0442\u0435\u043c\u0443 \u0442\u0435\u0445\u043d\u043e\u043b\u043e\u0433\u0438\u0438 \u043a\u0440\u0438\u043f\u0442\u043e\u0433\u0440\u0430\u0444\u0438\u0438 ZeroNet, \u043e\u0431\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u044f \u043a\u043e\u043d\u0442\u0435\u043d\u0442\u0430 \u0441\u0430\u0439\u0442\u0430 \u0438 \u043c\u043d\u043e\u0433\u043e\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u0441\u043a\u043e\u0433\u043e \u0440\u0430\u0441\u043f\u0440\u043e\u0441\u0442\u0440\u0430\u043d\u0435\u043d\u0438\u044f \u0441\u0430\u0439\u0442\u043e\u0432 &raquo;"
        }, 
        {
            "location": "/#_4", 
            "text": "", 
            "title": "\u0421\u043a\u0440\u0438\u043d\u0448\u043e\u0442\u044b"
        }, 
        {
            "location": "/#_5", 
            "text": "", 
            "title": "\u0415\u0449\u0435 \u0441\u043a\u0440\u0438\u043d\u0448\u043e\u0442\u044b &raquo;"
        }, 
        {
            "location": "/#_6", 
            "text": "\u041e\u0442\u0441\u0443\u0442\u0441\u0442\u0432\u0438\u0435 \u043f\u043e\u0434\u0434\u0435\u0440\u0436\u043a\u0438 torrent-\u0442\u0435\u0445\u043d\u043e\u043b\u043e\u0433\u0438\u0438 \u0440\u0430\u0437\u0434\u0435\u043b\u0435\u043d\u0438\u044f \u0431\u043e\u043b\u044c\u0448\u0438\u0445 \u0444\u0430\u0439\u043b\u043e\u0432  \u041e\u0442\u0441\u0443\u0442\u0441\u0442\u0432\u0438\u0435 \u0441\u0436\u0430\u0442\u0438\u044f \u0438 \u0448\u0438\u0444\u0440\u043e\u0432\u0430\u043d\u0438\u044f (\u043f\u043e\u043a\u0430) \u043f\u0440\u0438 \u043f\u0435\u0440\u0435\u0434\u0430\u0447\u0438 \u0434\u0430\u043d\u043d\u044b\u0445 (\u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f TLS \u0448\u0438\u0444\u0440\u043e\u0432\u0430\u043d\u0438\u0435)  \u041e\u0442\u0441\u0443\u0442\u0441\u0442\u0432\u0438\u0435 \u0441\u0430\u0439\u0442\u043e\u0432 \u0441 \u043e\u0433\u0440\u0430\u043d\u0438\u0447\u0435\u043d\u043d\u044b\u043c \u0434\u043e\u0441\u0442\u0443\u043f\u043e\u043c", 
            "title": "\u0421\u0443\u0449\u0435\u0441\u0442\u0432\u0443\u044e\u0449\u0438\u0435 \u043e\u0433\u0440\u0430\u043d\u0438\u0447\u0435\u043d\u0438\u044f"
        }, 
        {
            "location": "/#_7", 
            "text": "Bitcoin: 1QDhxQ6PraUZa21ET5fYUCPgdrwBomnFgX", 
            "title": "\u041f\u043e\u043c\u043e\u0449\u044c \u0434\u043b\u044f \u043f\u043e\u0434\u0434\u0435\u0440\u0436\u0430\u043d\u0438\u0438 \u043f\u0440\u043e\u0435\u043a\u0442\u0430"
        }, 
        {
            "location": "/#_8", 
            "text": "\u0411\u043e\u043b\u044c\u0448\u0435 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0438 \u043e \u043f\u043e\u0434\u0434\u0435\u0440\u0436\u043a\u0435, \u043e\u0431\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u0439 \u0438 \u043d\u043e\u0432\u044b\u0445 \u0441\u0430\u0439\u0442\u043e\u0432 ZeroNet \u043c\u043e\u0436\u043d\u043e \u043d\u0430\u0439\u0442\u0438:  http://www.reddit.com/r/zeronet/  \u041d\u0430\u0448 \u043e\u0444\u0438\u0446\u0438\u0430\u043b\u044c\u043d\u044b\u0439 \u0447\u0430\u0442:  #zeronet @ FreeNode  or on  gitter", 
            "title": "\u0411\u043b\u0430\u0433\u043e\u0434\u0430\u0440\u043d\u043e\u0441\u0442\u044c!"
        }, 
        {
            "location": "/faq/", 
            "text": "Frequently asked questions\n\n\nDo I need to have a port opened?\n\n\nThis is \noptional\n, you can browse and use ZeroNet sites without an open port.\nIf you want to create a new site it's highly recommended to have an open port.\n\n\nAt startup ZeroNet tries to open a port for you on your router using\n\nUPnP\n, if this fails you have to do it manually:\n\n\n\n\nTry access your router's web interface using \nhttp://192.168.1.1\n\nor \nhttp://192.168.0.1\n\n\nLook for an \"Enable UPnP support\" or similar option then restart ZeroNet.\n\n\n\n\nIf it still doesn't work then try to find a 'port forwarding' section. This is different in every router. \nHere is a tutorial on YouTube.\n The port to forward is 15441.\n\n\n\n\nIs ZeroNet anonymous?\n\n\nIt's no more anonymous than BitTorrent, but privacy (the possibility to find out who is the owner of the comment/site) will increase as the network and the sites gains more peers.\n\n\nZeroNet is made to work with anonymity networks: you can easily hide your IP using the Tor network.\n\n\n\n\nHow to use ZeroNet in Tor browser?\n\n\nIn Tor mode it's recommended to use ZeroNet in Tor Browser:\n\n\n\n\nStart the Tor Browser\n\n\nGo to address \nabout:preferences#advanced\n\n\nClick \nSettings...\n\n\nEnter \n127.0.0.1\n to field \nNo proxy for\n\n\n\n\n\n\nHow to use ZeroNet with Tor?\n\n\nIf you want to hide your IP install the latest version of ZeroNet then click Tor \n Enable Tor for every connection on ZeroHello.\n\n\nOn Windows Tor is bundled with ZeroNet for other OS \nfollow Tor install instructions\n,\nedit your torrc configuration file by removing \n#\n from line \n# ControlPort 9051\n then restart your Tor service and ZeroNet.\n\n\n\n\nTip:\n You can verify your IP address using ZeroNet's \nStats\n page.\n\n\nTip:\n If you get connection errors make sure you have the latest version of Tor installed. (0.2.7.5+ required)\n\n\n\n\n\n\nHow to make ZeroNet work with Tor under Linux?\n\n\nUpgrade to latest version of Tor (we need 0.2.7.5+), follow \nthese\n instructions eg. for Debian:\n\n\n\n\necho 'deb http://deb.torproject.org/torproject.org jessie main'\n /etc/apt/sources.list.d/tor.list\n\n\ngpg --keyserver keys.gnupg.net --recv 886DDD89\n\n\ngpg --export A3C4F0F979CAA22CDBA8F512EE8CBC9E886DDD89 | apt-key add -\n\n\napt-get update\n\n\napt-get install tor\n\n\n\n\nEdit config to enable control protocol:\n\n\n\n\nmcedit /etc/tor/torrc\n\n\nRemove the \n#\n character from lines \nControlPort 9051\n and \nCookieAuthentication 1\n (line ~57)\n\n\n/etc/init.d/tor restart\n\n\nAdd permission yourself to read the auth cookie by \nusermod -a -G debian-tor [yourlinuxuser]\n(if you are not on Debian check the file's user group by \nls -al /var/run/tor/control.authcookie\n)\n\n\nLogout/Login with your user to apply group changes\n\n\n\n\n\n\nTip:\n You can verify if your Tor running correctly using \necho 'PROTOCOLINFO' | nc 127.0.0.1 9051\n\n\nTip:\n It's also possible to use without modifying torrc (or using older version of Tor clients) by running it \nzeronet.py --tor disable --proxy 127.0.0.1:9050 --disable_udp\n, but then you will loose ability to talk with other .onion addresses.\n\n\n\n\n\n\nCan I use the same username on multiple machine?\n\n\nYes, you have to copy the \ndata/users.json\n file.\n\n\n\n\nHow can I register a .bit domain?\n\n\nYou can register .bit domains using \nNamecoin\n.\nManage your domains using the client's GUI or by the \ncommand line interface\n.\n\n\nAfter the registration is done you have to edit your domain's record by adding a zeronet section to it, eg.:\n\n\n{\n...\n    \nzeronet\n: {\n        \n: \n1EU1tbG9oC1A8jz2ouVwGZyQ5asrNsE4Vr\n,\n        \nblog\n: \n1BLogC9LN4oPDcruNz3qo1ysa133E9AGg8\n,\n        \ntalk\n: \n1TaLk3zM7ZRskJvrh3ZNCDVGXvkJusPKQ\n\n    },\n...\n}\n\n\n\n\n\"\" means the top domain, any other that is a sub-domain.\n\n\n\n\nTip:\n Other possibilities to register .bit domains: \ndomaincoin.net\n, \npeername.com\n, \ndotbit.me\n\n\nTip:\n You can verify your domain on \nnamecha.in\n, for example: \nzeroid.bit\n\n\nTip:\n You should use only \nlower-cased letters, numbers and - in your domains\n.\n\n\nTip:\n To make ZeroHello to link your domain instead of your site's address, add a domain key to your content.json. (\nExample\n)\n\n\n\n\n\n\nCan I use the generated site address/private key to accept Bitcoin payments?\n\n\nYes, it's a standard Bitcoin address. The private key is WIF formatted, so you can import it in most clients.\n\n\n\n\nTip:\n It's not recommended to keep a high amount of money on your site's address, because you have to enter your private key every time you modify your site.\n\n\n\n\n\n\nWhat happens when someone hosts malicious content?\n\n\nThe ZeroNet sites are sandboxed, they have the same privileges as any other website you visit over the Internet.\nYou are in full control of what you are hosting. If you find suspicious content you can stop hosting the site at any time.\n\n\n\n\nIs it possible to install ZeroNet to a remote machine?\n\n\nYes, you have to enable the UiPassword plugin by renaming the \nplugins/disabled-UiPassword\n directory to \nplugins/UiPassword\n,\nthen start ZeroNet on the remote machine using \nzeronet.py --ui_ip \"*\" --ui_password anypassword\n.\nThis will bind the ZeroNet UI webserver to all interfaces, but to keep it secure you can only access it by entering the given password.\n\n\n\n\nTip:\n You can also restrict the interface based on ip address by using \n--ui_restrict ip1 ip2\n.\n\n\nTip:\n You can specify the password in config file by creating a \nzeronet.conf\n file and add \n[global]\n, \nui_password = anypassword\n lines to it.\n\n\n\n\n\n\nIs there anyway to track the bandwidth ZeroNet is using?\n\n\nThe sent/received bytes are displayed at ZeroNet's sidebar.\n(open it by dragging the topright \n0\n button to left)\n\n\n\n\nTip:\n Per connection statistics page: \nhttp://127.0.0.1:43110/Stats\n\n\n\n\n\n\nWhat happens if two people use the same keys to modify a site?\n\n\nEvery content.json file is timestamped, the clients always accepts the newest one.\n\n\n\n\nDoes ZeroNet use Bitcoin's blockchain?\n\n\nNo, ZeroNet only uses the cryptography of Bitcoin for site addresses and content signing/verification.\nThe users identification is also based on Bitcoin's \nBIP32\n format.\n\n\nNamecoin's blockchain is being used for domain registrations.\n\n\n\n\nDoes ZeroNet only support HTML, CSS websites?\n\n\nZeroNet is built for dynamic, real-time updated websites, but you can serve any kind of files using it.\n(VCS repositories, your own thin-client, database, etc.)\n\n\n\n\nHow can I create a new ZeroNet site?\n\n\nFollow those instructions.\n\n\n\n\nHow does it work?\n\n\n\n\nWhen you want to open a new site it asks visitors IP addresses from BitTorrent network\n\n\nFirst downloads a file named \ncontent.json\n, which holds all other filenames,\n  \nhashes\n and the site owner's cryptographic signature\n\n\nVerifies\n the downloaded content.json file using the site's \naddress\n and the site owner's \nsignature\n from the file\n\n\nDownloads other file\n (html, css, js...) and verifies them using the SHA512 hash for content.json file\n\n\nEach visited site becomes \nalso served by you\n.\n\n\nIf the site owner (who has the private key for the site address) \nmodifies\n the site, then he/she signs\n  the new content.json and \npublishes it to the peers\n. After the peers have verified the content.json\n  integrity (using the signature), they \ndownload the modified files\n and publish the new content to other peers.\n\n\n\n\nMore info:\n \nDescription of ZeroNet sample sites\n,\n \nSlides about how does ZeroNet work", 
            "title": "\u0427\u0430\u0441\u0442\u043e \u0437\u0430\u0434\u0430\u0432\u0430\u0435\u043c\u044b\u0435 \u0432\u043e\u043f\u0440\u043e\u0441\u044b"
        }, 
        {
            "location": "/faq/#frequently-asked-questions", 
            "text": "", 
            "title": "Frequently asked questions"
        }, 
        {
            "location": "/faq/#do-i-need-to-have-a-port-opened", 
            "text": "This is  optional , you can browse and use ZeroNet sites without an open port.\nIf you want to create a new site it's highly recommended to have an open port.  At startup ZeroNet tries to open a port for you on your router using UPnP , if this fails you have to do it manually:   Try access your router's web interface using  http://192.168.1.1 \nor  http://192.168.0.1  Look for an \"Enable UPnP support\" or similar option then restart ZeroNet.   If it still doesn't work then try to find a 'port forwarding' section. This is different in every router.  Here is a tutorial on YouTube.  The port to forward is 15441.", 
            "title": "Do I need to have a port opened?"
        }, 
        {
            "location": "/faq/#is-zeronet-anonymous", 
            "text": "It's no more anonymous than BitTorrent, but privacy (the possibility to find out who is the owner of the comment/site) will increase as the network and the sites gains more peers.  ZeroNet is made to work with anonymity networks: you can easily hide your IP using the Tor network.", 
            "title": "Is ZeroNet anonymous?"
        }, 
        {
            "location": "/faq/#how-to-use-zeronet-in-tor-browser", 
            "text": "In Tor mode it's recommended to use ZeroNet in Tor Browser:   Start the Tor Browser  Go to address  about:preferences#advanced  Click  Settings...  Enter  127.0.0.1  to field  No proxy for", 
            "title": "How to use ZeroNet in Tor browser?"
        }, 
        {
            "location": "/faq/#how-to-use-zeronet-with-tor", 
            "text": "If you want to hide your IP install the latest version of ZeroNet then click Tor   Enable Tor for every connection on ZeroHello.  On Windows Tor is bundled with ZeroNet for other OS  follow Tor install instructions ,\nedit your torrc configuration file by removing  #  from line  # ControlPort 9051  then restart your Tor service and ZeroNet.   Tip:  You can verify your IP address using ZeroNet's  Stats  page.  Tip:  If you get connection errors make sure you have the latest version of Tor installed. (0.2.7.5+ required)", 
            "title": "How to use ZeroNet with Tor?"
        }, 
        {
            "location": "/faq/#how-to-make-zeronet-work-with-tor-under-linux", 
            "text": "Upgrade to latest version of Tor (we need 0.2.7.5+), follow  these  instructions eg. for Debian:   echo 'deb http://deb.torproject.org/torproject.org jessie main'  /etc/apt/sources.list.d/tor.list  gpg --keyserver keys.gnupg.net --recv 886DDD89  gpg --export A3C4F0F979CAA22CDBA8F512EE8CBC9E886DDD89 | apt-key add -  apt-get update  apt-get install tor   Edit config to enable control protocol:   mcedit /etc/tor/torrc  Remove the  #  character from lines  ControlPort 9051  and  CookieAuthentication 1  (line ~57)  /etc/init.d/tor restart  Add permission yourself to read the auth cookie by  usermod -a -G debian-tor [yourlinuxuser] (if you are not on Debian check the file's user group by  ls -al /var/run/tor/control.authcookie )  Logout/Login with your user to apply group changes    Tip:  You can verify if your Tor running correctly using  echo 'PROTOCOLINFO' | nc 127.0.0.1 9051  Tip:  It's also possible to use without modifying torrc (or using older version of Tor clients) by running it  zeronet.py --tor disable --proxy 127.0.0.1:9050 --disable_udp , but then you will loose ability to talk with other .onion addresses.", 
            "title": "How to make ZeroNet work with Tor under Linux?"
        }, 
        {
            "location": "/faq/#can-i-use-the-same-username-on-multiple-machine", 
            "text": "Yes, you have to copy the  data/users.json  file.", 
            "title": "Can I use the same username on multiple machine?"
        }, 
        {
            "location": "/faq/#how-can-i-register-a-bit-domain", 
            "text": "You can register .bit domains using  Namecoin .\nManage your domains using the client's GUI or by the  command line interface .  After the registration is done you have to edit your domain's record by adding a zeronet section to it, eg.:  {\n...\n     zeronet : {\n         :  1EU1tbG9oC1A8jz2ouVwGZyQ5asrNsE4Vr ,\n         blog :  1BLogC9LN4oPDcruNz3qo1ysa133E9AGg8 ,\n         talk :  1TaLk3zM7ZRskJvrh3ZNCDVGXvkJusPKQ \n    },\n...\n}  \"\" means the top domain, any other that is a sub-domain.   Tip:  Other possibilities to register .bit domains:  domaincoin.net ,  peername.com ,  dotbit.me  Tip:  You can verify your domain on  namecha.in , for example:  zeroid.bit  Tip:  You should use only  lower-cased letters, numbers and - in your domains .  Tip:  To make ZeroHello to link your domain instead of your site's address, add a domain key to your content.json. ( Example )", 
            "title": "How can I register a .bit domain?"
        }, 
        {
            "location": "/faq/#can-i-use-the-generated-site-addressprivate-key-to-accept-bitcoin-payments", 
            "text": "Yes, it's a standard Bitcoin address. The private key is WIF formatted, so you can import it in most clients.   Tip:  It's not recommended to keep a high amount of money on your site's address, because you have to enter your private key every time you modify your site.", 
            "title": "Can I use the generated site address/private key to accept Bitcoin payments?"
        }, 
        {
            "location": "/faq/#what-happens-when-someone-hosts-malicious-content", 
            "text": "The ZeroNet sites are sandboxed, they have the same privileges as any other website you visit over the Internet.\nYou are in full control of what you are hosting. If you find suspicious content you can stop hosting the site at any time.", 
            "title": "What happens when someone hosts malicious content?"
        }, 
        {
            "location": "/faq/#is-it-possible-to-install-zeronet-to-a-remote-machine", 
            "text": "Yes, you have to enable the UiPassword plugin by renaming the  plugins/disabled-UiPassword  directory to  plugins/UiPassword ,\nthen start ZeroNet on the remote machine using  zeronet.py --ui_ip \"*\" --ui_password anypassword .\nThis will bind the ZeroNet UI webserver to all interfaces, but to keep it secure you can only access it by entering the given password.   Tip:  You can also restrict the interface based on ip address by using  --ui_restrict ip1 ip2 .  Tip:  You can specify the password in config file by creating a  zeronet.conf  file and add  [global] ,  ui_password = anypassword  lines to it.", 
            "title": "Is it possible to install ZeroNet to a remote machine?"
        }, 
        {
            "location": "/faq/#is-there-anyway-to-track-the-bandwidth-zeronet-is-using", 
            "text": "The sent/received bytes are displayed at ZeroNet's sidebar. (open it by dragging the topright  0  button to left)   Tip:  Per connection statistics page:  http://127.0.0.1:43110/Stats", 
            "title": "Is there anyway to track the bandwidth ZeroNet is using?"
        }, 
        {
            "location": "/faq/#what-happens-if-two-people-use-the-same-keys-to-modify-a-site", 
            "text": "Every content.json file is timestamped, the clients always accepts the newest one.", 
            "title": "What happens if two people use the same keys to modify a site?"
        }, 
        {
            "location": "/faq/#does-zeronet-use-bitcoins-blockchain", 
            "text": "No, ZeroNet only uses the cryptography of Bitcoin for site addresses and content signing/verification.\nThe users identification is also based on Bitcoin's  BIP32  format.  Namecoin's blockchain is being used for domain registrations.", 
            "title": "Does ZeroNet use Bitcoin's blockchain?"
        }, 
        {
            "location": "/faq/#does-zeronet-only-support-html-css-websites", 
            "text": "ZeroNet is built for dynamic, real-time updated websites, but you can serve any kind of files using it.\n(VCS repositories, your own thin-client, database, etc.)", 
            "title": "Does ZeroNet only support HTML, CSS websites?"
        }, 
        {
            "location": "/faq/#how-can-i-create-a-new-zeronet-site", 
            "text": "Follow those instructions.", 
            "title": "How can I create a new ZeroNet site?"
        }, 
        {
            "location": "/faq/#how-does-it-work", 
            "text": "When you want to open a new site it asks visitors IP addresses from BitTorrent network  First downloads a file named  content.json , which holds all other filenames,\n   hashes  and the site owner's cryptographic signature  Verifies  the downloaded content.json file using the site's  address  and the site owner's  signature  from the file  Downloads other file  (html, css, js...) and verifies them using the SHA512 hash for content.json file  Each visited site becomes  also served by you .  If the site owner (who has the private key for the site address)  modifies  the site, then he/she signs\n  the new content.json and  publishes it to the peers . After the peers have verified the content.json\n  integrity (using the signature), they  download the modified files  and publish the new content to other peers.   More info:\n  Description of ZeroNet sample sites ,\n  Slides about how does ZeroNet work", 
            "title": "How does it work?"
        }, 
        {
            "location": "/using_zeronet/installing/", 
            "text": "Installing ZeroNet\n\n\n\n\nDownload ZeroBundle package: \nMicrosoft Windows\n, \nApple OS X\n, \nLinux 64bit\n, \nLinux 32bit\n\n\nUnpack anywhere\n\n\nRun \nZeroNet.cmd\n (win), \nZeroNet(.app)\n (osx), \nZeroNet.sh\n (linux)\n\n\n\n\nIt downloads the latest version of ZeroNet then starts it automatically.\n\n\nManual install for Debian Linux\n\n\n\n\nsudo apt-get update\n\n\nsudo apt-get install msgpack-python python-gevent\n\n\nwget https://github.com/HelloZeroNet/ZeroNet/archive/master.tar.gz\n\n\ntar xvpfz master.tar.gz\n\n\ncd ZeroNet-master\n\n\nStart with \npython zeronet.py\n\n\nOpen http://127.0.0.1:43110/ in your browser\n\n\n\n\nVagrant\n\n\n\n\nvagrant up\n\n\nAccess VM with \nvagrant ssh\n\n\ncd /vagrant\n\n\nRun \npython zeronet.py --ui_ip 0.0.0.0\n\n\nOpen http://127.0.0.1:43110/ in your browser\n\n\n\n\nDocker\n\n\n\n\ndocker run -d -v \nlocal_data_folder\n:/root/data -p 15441:15441 -p 43110:43110 nofish/zeronet\n\n\nOpen http://127.0.0.1:43110/ in your browser\n\n\n\n\nVirtualenv\n\n\n\n\nvirtualenv env\n\n\nsource env/bin/activate\n\n\npip install msgpack-python gevent\n\n\npython zeronet.py\n\n\nOpen http://127.0.0.1:43110/ in your browser", 
            "title": "\u0423\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0430"
        }, 
        {
            "location": "/using_zeronet/installing/#installing-zeronet", 
            "text": "Download ZeroBundle package:  Microsoft Windows ,  Apple OS X ,  Linux 64bit ,  Linux 32bit  Unpack anywhere  Run  ZeroNet.cmd  (win),  ZeroNet(.app)  (osx),  ZeroNet.sh  (linux)   It downloads the latest version of ZeroNet then starts it automatically.", 
            "title": "Installing ZeroNet"
        }, 
        {
            "location": "/using_zeronet/installing/#manual-install-for-debian-linux", 
            "text": "sudo apt-get update  sudo apt-get install msgpack-python python-gevent  wget https://github.com/HelloZeroNet/ZeroNet/archive/master.tar.gz  tar xvpfz master.tar.gz  cd ZeroNet-master  Start with  python zeronet.py  Open http://127.0.0.1:43110/ in your browser", 
            "title": "Manual install for Debian Linux"
        }, 
        {
            "location": "/using_zeronet/installing/#vagrant", 
            "text": "vagrant up  Access VM with  vagrant ssh  cd /vagrant  Run  python zeronet.py --ui_ip 0.0.0.0  Open http://127.0.0.1:43110/ in your browser", 
            "title": "Vagrant"
        }, 
        {
            "location": "/using_zeronet/installing/#docker", 
            "text": "docker run -d -v  local_data_folder :/root/data -p 15441:15441 -p 43110:43110 nofish/zeronet  Open http://127.0.0.1:43110/ in your browser", 
            "title": "Docker"
        }, 
        {
            "location": "/using_zeronet/installing/#virtualenv", 
            "text": "virtualenv env  source env/bin/activate  pip install msgpack-python gevent  python zeronet.py  Open http://127.0.0.1:43110/ in your browser", 
            "title": "Virtualenv"
        }, 
        {
            "location": "/using_zeronet/sample_sites/", 
            "text": "Sample ZeroNet sites\n\n\nZeroHello\n\n\nThe homepage of ZeroNet\n\n\n\n\nLists all added sites: Title, Peer number, Modification date\n\n\nSite actions: Update, Pause, Resume, Delete\n\n\nClone sites to have your own blog / forum\n\n\nIf new version available update ZeroNet with one click\n\n\n\n\n\n\nAddress: \n1HeLLo4uzjaLetFx6NH3PMwFP3qbRbTf3D\n\n\nSource code\n\n\n\n\nZeroBoard\n\n\nSimple message board demo for dynamic content distribution\n\n\n\n\nDynamic avatars generated by user auth_key\n\n\nReal time message updates\n\n\n\n\nHow does it work?\n\n\n\n\nYou send your message to site's private key owner bot\n\n\nThe bot modify the \nmessage.json\n file, signs it using the private key and publish to other peers\n\n\nIf the site modification reaches your client the message will appear to your browser\n\n\n\n\n\n\nAddress: \n1Gfey7wVXXg1rxk751TBTxLJwhddDNfcdp\n\n\nSource code\n\n\n\n\nZeroBlog\n\n\nSelf publishing blog demo\n\n\n\n\nInline content editor\n\n\nMarkdown syntax\n\n\nCode syntax highlighting\n\n\nSite signing \n publishing using only the web interface\n\n\n\n\nHow does it work?\n\n\n\n\nYou can edit the \ndata.json\n file using the web interface\n\n\nBy pressing \nSign \n Publish new content\n button it asks for the site private key (its displayed when you \ncreating a new site using zeronet.py siteCreate command\n)\n\n\nYour ZeroNet client signs the new, modified files and publish directly to other peers\n\n\nYou site will be accessible until at least 1 peer (visitor) computer is active\n\n\n\n\n\n\nAddress: \n1BLogC9LN4oPDcruNz3qo1ysa133E9AGg8\n or \nblog.zeronetwork.bit\n\n\nSource code\n\n\n\n\nZeroTalk\n\n\nDecentralized, P2P forum demo\n\n\n\n\nTopic and message create, modify, delete\n\n\nTopic and message upvoting\n\n\nOnly have to contact the site owner once, when requesting modifications permissions to site\n\n\nCommenting and content modifications pushed directly to other peers\n\n\nOnly you can sign and modify your own files\n\n\nReal time display of new comments\n\n\n\n\nHow does it work?\n\n\n\n\nTo interact with the site you have to request a certificate of registration (a cryptographic sign) from a ZeroID provider\n\n\nAfter you have the certificate you can publish your content (messages, topics, upvotes) directly to other peers\n\n\n\n\n\n\nAddress: \n1TaLkFrMwvbNsooF4ioKAY9EuxTBTjipT\n or \ntalk.zeronetwork.bit\n\n\nSource code\n\n\n\n\nZeroMail\n\n\nEnd-to-end encrypted, distributed, P2P messaging site. To improve privacy it uses a BitMessage-like solution and will not expose the message recipient.\n\n\n\n\nUsing ECIES for secret exchange, AES256 for message encoding\n\n\nWhen you first visit the site it adds your public key to your data file and after that anyone is able to send a message to you\n\n\nEveryone tries to decrypt every message, this improves privacy by making it impossible to find the message recipient\n\n\nTo reduce per message overhead and increase decryption speed we re-use the AES key, but a new IV is generated every time\n\n\n\n\n\n\nAddress: \n1MaiL5gfBM1cyb4a8e3iiL8L5gXmoAJu27\n or \nmail.zeronetwork.bit\n\n\nSource code\n\n\n\n\nZeroChat\n\n\nThe finished site for the tutorial of creating a server-less, SQL backed, real-time updated P2P chat application using ZeroNet in less than 100 lines of code\n\n\n\n\nSelecting ZeroID certificate\n\n\nStoring messages in a SQL database\n\n\nCreating own messages and distribute directly to other users in real-time\n\n\nReal-time update the messages as they arrive\n\n\n\n\n\n\nAddress of finished site: \n1AvF5TpcaamRNtqvN1cnDEWzNmUtD47Npg\n\n\nTutorial on ZeroBlog:\n \nPart1\n,\n \nPart2\n\n\n\n\nReactionGIFs\n\n\nDemo for optional files, the video files only download if your browser requests them.\n\n\n\n\nAddress: \n1Gif7PqWTzVWDQ42Mo7np3zXmGAo3DXc7h\n\n\nSource code", 
            "title": "\u041f\u0440\u043e\u0441\u0442\u043e\u0439 \u0441\u0430\u0439\u0442"
        }, 
        {
            "location": "/using_zeronet/sample_sites/#sample-zeronet-sites", 
            "text": "", 
            "title": "Sample ZeroNet sites"
        }, 
        {
            "location": "/using_zeronet/sample_sites/#zerohello", 
            "text": "The homepage of ZeroNet   Lists all added sites: Title, Peer number, Modification date  Site actions: Update, Pause, Resume, Delete  Clone sites to have your own blog / forum  If new version available update ZeroNet with one click    Address:  1HeLLo4uzjaLetFx6NH3PMwFP3qbRbTf3D  Source code", 
            "title": "ZeroHello"
        }, 
        {
            "location": "/using_zeronet/sample_sites/#zeroboard", 
            "text": "Simple message board demo for dynamic content distribution   Dynamic avatars generated by user auth_key  Real time message updates   How does it work?   You send your message to site's private key owner bot  The bot modify the  message.json  file, signs it using the private key and publish to other peers  If the site modification reaches your client the message will appear to your browser    Address:  1Gfey7wVXXg1rxk751TBTxLJwhddDNfcdp  Source code", 
            "title": "ZeroBoard"
        }, 
        {
            "location": "/using_zeronet/sample_sites/#zeroblog", 
            "text": "Self publishing blog demo   Inline content editor  Markdown syntax  Code syntax highlighting  Site signing   publishing using only the web interface   How does it work?   You can edit the  data.json  file using the web interface  By pressing  Sign   Publish new content  button it asks for the site private key (its displayed when you  creating a new site using zeronet.py siteCreate command )  Your ZeroNet client signs the new, modified files and publish directly to other peers  You site will be accessible until at least 1 peer (visitor) computer is active    Address:  1BLogC9LN4oPDcruNz3qo1ysa133E9AGg8  or  blog.zeronetwork.bit  Source code", 
            "title": "ZeroBlog"
        }, 
        {
            "location": "/using_zeronet/sample_sites/#zerotalk", 
            "text": "Decentralized, P2P forum demo   Topic and message create, modify, delete  Topic and message upvoting  Only have to contact the site owner once, when requesting modifications permissions to site  Commenting and content modifications pushed directly to other peers  Only you can sign and modify your own files  Real time display of new comments   How does it work?   To interact with the site you have to request a certificate of registration (a cryptographic sign) from a ZeroID provider  After you have the certificate you can publish your content (messages, topics, upvotes) directly to other peers    Address:  1TaLkFrMwvbNsooF4ioKAY9EuxTBTjipT  or  talk.zeronetwork.bit  Source code", 
            "title": "ZeroTalk"
        }, 
        {
            "location": "/using_zeronet/sample_sites/#zeromail", 
            "text": "End-to-end encrypted, distributed, P2P messaging site. To improve privacy it uses a BitMessage-like solution and will not expose the message recipient.   Using ECIES for secret exchange, AES256 for message encoding  When you first visit the site it adds your public key to your data file and after that anyone is able to send a message to you  Everyone tries to decrypt every message, this improves privacy by making it impossible to find the message recipient  To reduce per message overhead and increase decryption speed we re-use the AES key, but a new IV is generated every time    Address:  1MaiL5gfBM1cyb4a8e3iiL8L5gXmoAJu27  or  mail.zeronetwork.bit  Source code", 
            "title": "ZeroMail"
        }, 
        {
            "location": "/using_zeronet/sample_sites/#zerochat", 
            "text": "The finished site for the tutorial of creating a server-less, SQL backed, real-time updated P2P chat application using ZeroNet in less than 100 lines of code   Selecting ZeroID certificate  Storing messages in a SQL database  Creating own messages and distribute directly to other users in real-time  Real-time update the messages as they arrive    Address of finished site:  1AvF5TpcaamRNtqvN1cnDEWzNmUtD47Npg  Tutorial on ZeroBlog:\n  Part1 ,\n  Part2", 
            "title": "ZeroChat"
        }, 
        {
            "location": "/using_zeronet/sample_sites/#reactiongifs", 
            "text": "Demo for optional files, the video files only download if your browser requests them.   Address:  1Gif7PqWTzVWDQ42Mo7np3zXmGAo3DXc7h  Source code", 
            "title": "ReactionGIFs"
        }, 
        {
            "location": "/using_zeronet/create_new_site/", 
            "text": "Create new ZeroNet site\n\n\n1. Create site structure\n\n\n\n\nShut down ZeroNet if it is running\n\n\nBrowse to the folder where ZeroNet is installed and run:\n\n\n\n\n$ zeronet.py siteCreate\n...\n- Site private key: 23DKQpzxhbVBrAtvLEc2uvk7DZweh4qL3fn3jpM3LgHDczMK2TtYUq\n- Site address: 13DNDkMUExRf9Xa9ogwPKqp7zyHFEqbhC2\n...\n- Site created!\n$ zeronet.py\n...\n\n\n\n\n\n\nThis will create the initial files for your site inside \ndata/13DNDkMUExRf9Xa9ogwPKqp7zyHFEqbhC2\n.\n\n\n\n\n\n\nNote:\n\nWindows users using the bundle version must browse into the ZeroBundle/ZeroNet folder and run \n\"../Python/python.exe\" zeronet.py siteCreate\n\n\n\n\n2. Build/Modify site\n\n\n\n\nUpdate the site files located in \ndata/[your site address key]\n (eg: 13DNDkMUExRf9Xa9ogwPKqp7zyHFEqbhC2).\n\n\nWhen your site is ready run:\n\n\n\n\n$ zeronet.py siteSign 13DNDkMUExRf9Xa9ogwPKqp7zyHFEqbhC2\n- Signing site: 13DNDkMUExRf9Xa9ogwPKqp7zyHFEqbhC2...\nPrivate key (input hidden):\n\n\n\n\n\n\nEnter the private key you got when you created the site. This will sign all files so peers can verify that the site owner is who made the changes.\n\n\n\n\n3. Publish site changes\n\n\n\n\nIn order to inform peers about the changes you made you need to run:\n\n\n\n\n$ zeronet.py sitePublish 13DNDkMUExRf9Xa9ogwPKqp7zyHFEqbhC2\n...\nSite:13DNDk..bhC2 Publishing to 3/10 peers...\nSite:13DNDk..bhC2 Successfuly published to 3 peers\n- Serving files....\n\n\n\n\n\n\nThat's it! You've successfully signed and published your modifications.\n\n\nYour site will be accessible from: \nhttp://localhost:43110/13DNDkMUExRf9Xa9ogwPKqp7zyHFEqbhC2\n\n\n\n\nNext steps:\n \nZeroNet Developer Documentation", 
            "title": "\u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u0441\u0430\u0439\u0442\u0430"
        }, 
        {
            "location": "/using_zeronet/create_new_site/#create-new-zeronet-site", 
            "text": "", 
            "title": "Create new ZeroNet site"
        }, 
        {
            "location": "/using_zeronet/create_new_site/#1-create-site-structure", 
            "text": "Shut down ZeroNet if it is running  Browse to the folder where ZeroNet is installed and run:   $ zeronet.py siteCreate\n...\n- Site private key: 23DKQpzxhbVBrAtvLEc2uvk7DZweh4qL3fn3jpM3LgHDczMK2TtYUq\n- Site address: 13DNDkMUExRf9Xa9ogwPKqp7zyHFEqbhC2\n...\n- Site created!\n$ zeronet.py\n...   This will create the initial files for your site inside  data/13DNDkMUExRf9Xa9ogwPKqp7zyHFEqbhC2 .    Note: \nWindows users using the bundle version must browse into the ZeroBundle/ZeroNet folder and run  \"../Python/python.exe\" zeronet.py siteCreate", 
            "title": "1. Create site structure"
        }, 
        {
            "location": "/using_zeronet/create_new_site/#2-buildmodify-site", 
            "text": "Update the site files located in  data/[your site address key]  (eg: 13DNDkMUExRf9Xa9ogwPKqp7zyHFEqbhC2).  When your site is ready run:   $ zeronet.py siteSign 13DNDkMUExRf9Xa9ogwPKqp7zyHFEqbhC2\n- Signing site: 13DNDkMUExRf9Xa9ogwPKqp7zyHFEqbhC2...\nPrivate key (input hidden):   Enter the private key you got when you created the site. This will sign all files so peers can verify that the site owner is who made the changes.", 
            "title": "2. Build/Modify site"
        }, 
        {
            "location": "/using_zeronet/create_new_site/#3-publish-site-changes", 
            "text": "In order to inform peers about the changes you made you need to run:   $ zeronet.py sitePublish 13DNDkMUExRf9Xa9ogwPKqp7zyHFEqbhC2\n...\nSite:13DNDk..bhC2 Publishing to 3/10 peers...\nSite:13DNDk..bhC2 Successfuly published to 3 peers\n- Serving files....   That's it! You've successfully signed and published your modifications.  Your site will be accessible from:  http://localhost:43110/13DNDkMUExRf9Xa9ogwPKqp7zyHFEqbhC2   Next steps:   ZeroNet Developer Documentation", 
            "title": "3. Publish site changes"
        }, 
        {
            "location": "/site_development/getting_started/", 
            "text": "Overview\n\n\nZeroNet allows you to publish static and dynamic sites.\n\n\nAlthough ZeroNet can't run scripting languages like PHP or Ruby, you can create dynamic sites using ZeroNet's API (called ZeroFrame), JavaScript (or CoffeeScript) and the built-in SQL database.\n\n\nZeroNet Debug mode\n\n\nZeroNet comes with a \n--debug\n flag that will make site development easier.\n\n\nTo run ZeroNet in debug mode use: \npython zeronet.py --debug\n\n\nDebug mode features:\n\n\n\n\nAutomatic CoffeeScript -\n JavaScript conversion (All examples used in this documentation and sample sites are written in \nCoffeeScript\n)\n\n\nDebug messages will appear in the console\n\n\nAuto reload of some source files (UiRequest, UiWebsocket, FileRequest) on modification to prevent restarting (Requires \nPyFilesystem\n on GNU/Linux)\n\n\nhttp://127.0.0.1:43110/Debug\n Traceback and interactive Python console at the last error position (using the wonderful Werkzeug debugger - Requires \nWerkzeug\n)\n\n\nhttp://127.0.0.1:43110/Console\n Spawns an interactive Python console (Requires \nWerkzeug\n)\n\n\n\n\nExtra features (works only for sites that you own)\n\n\n\n\nMerged CSS files: All CSS files inside the site folder will be merged into one file called \nall.css\n. You can choose to include only this file to your site. If you want to keep the other CSS files to make the development easier, you can add them to the ignore key of your \ncontent.json\n. This way, they won't be published with your site. (eg: add to your \ncontent.json\n \n\"ignore\": \"(js|css)/(?!all.(js|css))\"\n this will ignore all CSS and JS files except \nall.js\n and \nall.css\n)\n\n\nMerged JS files: All JS files inside the site folder will be merged into one file called \nall.js\n. If a CoffeeScript compiler is present (bundled for Windows) it will convert \n.coffee\n to \n.js\n.\n\n\nOrder in which files are merged into all.css/all.js: Files inside subdirectories of the css/js folder comes first; Files in the css/js folder will be merged according to file name ordering (01_a.css, 02_a.css, etc)\n\n\n\n\nZeroNet site development tutorial\n\n\nPart #1\n:\n\n\n\n\nSite creation,\n\n\nFirst ZeroFrame API calls)\n\n\n\n\nPart #2\n:\n\n\n\n\nUser login\n\n\nPublish new content to network\n\n\nSQL Database insert and query\n\n\nReal-time update your site", 
            "title": "\u0412\u0441\u0442\u0443\u043f\u043b\u0435\u043d\u0438\u0435"
        }, 
        {
            "location": "/site_development/getting_started/#overview", 
            "text": "ZeroNet allows you to publish static and dynamic sites.  Although ZeroNet can't run scripting languages like PHP or Ruby, you can create dynamic sites using ZeroNet's API (called ZeroFrame), JavaScript (or CoffeeScript) and the built-in SQL database.", 
            "title": "Overview"
        }, 
        {
            "location": "/site_development/getting_started/#zeronet-debug-mode", 
            "text": "ZeroNet comes with a  --debug  flag that will make site development easier.  To run ZeroNet in debug mode use:  python zeronet.py --debug", 
            "title": "ZeroNet Debug mode"
        }, 
        {
            "location": "/site_development/getting_started/#debug-mode-features", 
            "text": "Automatic CoffeeScript -  JavaScript conversion (All examples used in this documentation and sample sites are written in  CoffeeScript )  Debug messages will appear in the console  Auto reload of some source files (UiRequest, UiWebsocket, FileRequest) on modification to prevent restarting (Requires  PyFilesystem  on GNU/Linux)  http://127.0.0.1:43110/Debug  Traceback and interactive Python console at the last error position (using the wonderful Werkzeug debugger - Requires  Werkzeug )  http://127.0.0.1:43110/Console  Spawns an interactive Python console (Requires  Werkzeug )", 
            "title": "Debug mode features:"
        }, 
        {
            "location": "/site_development/getting_started/#extra-features-works-only-for-sites-that-you-own", 
            "text": "Merged CSS files: All CSS files inside the site folder will be merged into one file called  all.css . You can choose to include only this file to your site. If you want to keep the other CSS files to make the development easier, you can add them to the ignore key of your  content.json . This way, they won't be published with your site. (eg: add to your  content.json   \"ignore\": \"(js|css)/(?!all.(js|css))\"  this will ignore all CSS and JS files except  all.js  and  all.css )  Merged JS files: All JS files inside the site folder will be merged into one file called  all.js . If a CoffeeScript compiler is present (bundled for Windows) it will convert  .coffee  to  .js .  Order in which files are merged into all.css/all.js: Files inside subdirectories of the css/js folder comes first; Files in the css/js folder will be merged according to file name ordering (01_a.css, 02_a.css, etc)", 
            "title": "Extra features (works only for sites that you own)"
        }, 
        {
            "location": "/site_development/getting_started/#zeronet-site-development-tutorial", 
            "text": "", 
            "title": "ZeroNet site development tutorial"
        }, 
        {
            "location": "/site_development/getting_started/#part-1", 
            "text": "Site creation,  First ZeroFrame API calls)", 
            "title": "Part #1:"
        }, 
        {
            "location": "/site_development/getting_started/#part-2", 
            "text": "User login  Publish new content to network  SQL Database insert and query  Real-time update your site", 
            "title": "Part #2:"
        }, 
        {
            "location": "/site_development/zeroframe_api_reference/", 
            "text": "ZeroFrame API Reference\n\n\nWrapper\n\n\nThese commands handled by wrapper frame and does not sent to UiServer using websocket\n\n\nwrapperConfirm \nmessage, [button_caption]\n\n\nDisplay a notification with confirm button\n\n\n\n\n\n\n\n\nParameter\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nmessage\n\n\nThe message you want to display\n\n\n\n\n\n\nbutton_caption\n (optional)\n\n\nCaption of the confirmation button (default: OK)\n\n\n\n\n\n\n\n\nReturn\n: True if clicked on button\n\n\nExample:\n\n\n# Delete site\nsiteDelete: (address) -\n\n    site = @sites[address]\n    title = site.content.title\n    if title.length \n 40\n        title = title.substring(0, 15)+\n...\n+title.substring(title.length-10)\n    @cmd \nwrapperConfirm\n, [\nAre you sure you sure? \nb\n#{title}\n/b\n, \nDelete\n], (confirmed) =\n\n        @log \nDeleting #{site.address}...\n, confirmed\n        if confirmed\n            $(\n.site-#{site.address}\n).addClass(\ndeleted\n)\n            @cmd \nsiteDelete\n, {\naddress\n: address}\n\n\n\n\n\n\nwrapperGetLocalStorage\n\n\nReturn\n: Browser's local store for the site\n\n\nExample:\n\n\n@cmd \nwrapperGetLocalStorage\n, [], (res) =\n\n    res ?= {}\n    @log \nLocal storage value:\n, res\n\n\n\n\n\n\nwrapperPermissionAdd \npermission\n\n\nRequest new permission for site\n\n\n\n\n\n\n\n\nParameter\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\npermission\n\n\nName of permission (eg. Merger:ZeroMe)\n\n\n\n\n\n\n\n\n\n\nwrapperSetLocalStorage \ndata\n\n\nSet browser's local store data stored for the site\n\n\n\n\n\n\n\n\nParameter\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\ndata\n\n\nAny data structure you want to store for the site\n\n\n\n\n\n\n\n\nReturn\n: None\n\n\nExample:\n\n\nPage.local_storage[\ntopic.#{@topic_id}_#{@topic_user_id}.visited\n] = Time.timestamp()\nPage.cmd \nwrapperSetLocalStorage\n, Page.local_storage\n\n\n\n\n\n\nwrapperNotification \ntype, message, [timeout]\n\n\nDisplay a notification\n\n\n\n\n\n\n\n\nParameter\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\ntype\n\n\nPossible values: info, error, done\n\n\n\n\n\n\nmessage\n\n\nThe message you want to display\n\n\n\n\n\n\ntimeout\n (optional)\n\n\nHide display after this interval (milliseconds)\n\n\n\n\n\n\n\n\nReturn\n: None\n\n\nExample:\n\n\n@cmd \nwrapperNotification\n, [\ndone\n, \nYour registration has been sent!\n, 10000]\n\n\n\n\n\n\nwrapperPrompt \nmessage, [type]\n\n\nPrompt text input from user\n\n\n\n\n\n\n\n\nParameter\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nmessage\n\n\nThe message you want to display\n\n\n\n\n\n\ntype\n (optional)\n\n\nType of the input (default: text)\n\n\n\n\n\n\n\n\nReturn\n: Text entered to input\n\n\nExample:\n\n\n# Prompt the private key\n@cmd \nwrapperPrompt\n, [\nEnter your private key:\n, \npassword\n], (privatekey) =\n\n    $(\n.publishbar .button\n).addClass(\nloading\n)\n    # Send sign content.json and publish request to server\n    @cmd \nsitePublish\n, [privatekey], (res) =\n\n        $(\n.publishbar .button\n).removeClass(\nloading\n)\n        @log \nPublish result:\n, res\n\n\n\n\nwrapperSetViewport \nviewport\n\n\nSet sites's viewport meta tag content (required for mobile sites)\n\n\n\n\n\n\n\n\nParameter\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nviewport\n\n\nThe viewport meta tag content\n\n\n\n\n\n\n\n\nReturn\n: None\n\n\nExample:\n\n\n# Prompt the private key\n@cmd \nwrapperSetViewport\n, \nwidth=device-width, initial-scale=1.0\n\n\n\n\n\n\n\nUiServer\n\n\nThe UiServer is for ZeroNet what the LAMP setup is for normal websites.\n\n\nThe UiServer will do all the 'backend' work (eg: querying the DB, accessing files, etc). This are the API calls you will need to make your site dynamic.\n\n\ncertAdd \ndomain, auth_type, auth_user_name, cert\n\n\nAdd a new certificate to current user.\n\n\n\n\n\n\n\n\nParameter\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\ndomain\n\n\nCertificate issuer domain\n\n\n\n\n\n\nauth_type\n\n\nAuth type used on registration\n\n\n\n\n\n\nauth_user_name\n\n\nUser name used on registration\n\n\n\n\n\n\ncert\n\n\nThe cert itself: \nauth_address#auth_type/auth_user_name\n string signed by the cert site owner\n\n\n\n\n\n\n\n\nReturn\n: \"ok\", \"Not changed\" or {\"error\": error_message}\n\n\nExample:\n\n\n@cmd \ncertAdd\n, [\nzeroid.bit\n, auth_type, user_name, cert_sign], (res) =\n\n    $(\n.ui\n).removeClass(\nflipped\n)\n    if res.error\n        @cmd \nwrapperNotification\n, [\nerror\n, \n#{res.error}\n]\n\n\n\n\n\n\ncertSelect \naccepted_domains\n\n\nDisplay certificate selector.\n\n\n\n\n\n\n\n\nParameter\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\naccepted_domains\n\n\nList of domains that accepted by site as authorization provider\n\n\n\n\n\n\n\n\nReturn\n: None\n\n\nExample:\n\n\n@cmd \ncertSelect\n, {\naccepted_domains\n: [\nzeroid.bit\n]}\n\n\n\n\n\n\nchannelJoin \nchannel\n\n\nRequest notifications about sites's events.\n\n\n\n\n\n\n\n\nParameter\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nchannel\n\n\nChannel to join\n\n\n\n\n\n\n\n\nReturn\n: None\n\n\nChannels\n:\n\n\n\n\nsiteChanged\n (joined by default)\nEvents: peers_added, file_started, file_done, file_failed\n\n\n\n\nExample\n:\n\n\n# Wrapper websocket connection ready\nonOpenWebsocket: (e) =\n\n    @cmd \nchannelJoinAllsite\n, {\nchannel\n: \nsiteChanged\n}\n\n# Route incoming requests and messages\nroute: (cmd, data) -\n\n    if cmd == \nsetSiteInfo\n\n        @log \nSite changed\n, data\n    else\n        @log \nUnknown command\n, cmd, data\n\n\n\n\nExample event data\n\n\n{\n    \ntasks\n:0,\n    \nsize_limit\n:10,\n    \naddress\n:\n1RivERqttrjFqwp9YH1FviduBosQPtdBN\n,\n    \nnext_size_limit\n:10,\n    \nevent\n:[ \nfile_done\n, \nindex.html\n ],\n    [...] # Same as siteInfo return dict\n}\n\n\n\n\n\n\n\ndbQuery \nquery\n\n\nRun a query on the sql cache\n\n\n\n\n\n\n\n\nParameter\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nquery\n\n\nSql query command\n\n\n\n\n\n\n\n\nReturn\n: \n Result of the query\n\n\nExample:\n\n\n@log \nUpdating user info...\n, @my_address\nPage.cmd \ndbQuery\n, [\nSELECT user.*, json.json_id AS data_json_id FROM user LEFT JOIN json USING(path) WHERE path='#{@my_address}/data.json'\n], (res) =\n\n    if res.error or res.length == 0 # Db not ready yet or No user found\n        $(\n.head-user.visitor\n).css(\ndisplay\n, \n)\n        $(\n.user_name-my\n).text(\nVisitor\n)\n        if cb then cb()\n        return\n\n    @my_row = res[0]\n    @my_id = @my_row[\nuser_id\n]\n    @my_name = @my_row[\nuser_name\n]\n    @my_max_size = @my_row[\nmax_size\n]\n\n\n\n\n\n\nfileGet \ninner_path, [required]\n\n\nGet file content\n\n\n\n\n\n\n\n\nParameter\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\ninner_path\n\n\nThe file you want to get\n\n\n\n\n\n\nrequired\n (optional)\n\n\nTry and wait for the file if it's not exists. (default: True)\n\n\n\n\n\n\n\n\nReturn\n: \n The content of the file\n\n\nExample:\n\n\n# Upvote a topic on ZeroTalk\nsubmitTopicVote: (e) =\n\n    if not Users.my_name # Not registered\n        Page.cmd \nwrapperNotification\n, [\ninfo\n, \nPlease, request access before posting.\n]\n        return false\n\n    elem = $(e.currentTarget)\n    elem.toggleClass(\nactive\n).addClass(\nloading\n)\n    inner_path = \ndata/users/#{Users.my_address}/data.json\n\n\n    Page.cmd \nfileGet\n, [inner_path], (data) =\n\n        data = JSON.parse(data)\n        data.topic_votes ?= {} # Create if not exits\n        topic_address = elem.parents(\n.topic\n).data(\ntopic_address\n)\n\n        if elem.hasClass(\nactive\n) # Add upvote to topic\n            data.topic_votes[topic_address] = 1\n        else # Remove upvote from topic\n            delete data.topic_votes[topic_address]\n\n        # Write file and publish to other peers\n        Page.writePublish inner_path, Page.jsonEncode(data), (res) =\n\n            elem.removeClass(\nloading\n)\n            if res == true\n                @log \nFile written\n\n            else # Failed\n                elem.toggleClass(\nactive\n) # Change back\n\n    return false\n\n\n\n\n\n\nfileDelete \ninner_path\n\n\nGet file content\n\n\n\n\n\n\n\n\nParameter\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\ninner_path\n\n\nThe file you want to delete\n\n\n\n\n\n\n\n\nReturn\n: \"ok\" on success else the error message\n\n\n\n\nfileQuery \ndir_inner_path, query\n\n\nSimple json file query command\n\n\n\n\n\n\n\n\nParameter\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\ndir_inner_path\n\n\nPattern of queried files\n\n\n\n\n\n\nquery\n\n\nQuery command\n\n\n\n\n\n\n\n\nReturn\n: \n Matched content\n\n\nQuery examples:\n\n\n\n\n[\"data/users/*/data.json\", \"topics\"]\n: Returns all topics node from all user files\n\n\n[\"data/users/*/data.json\", \"comments.1@2\"]\n: Returns \nuser_data[\"comments\"][\"1@2\"]\n value from all user files\n\n\n[\"data/users/*/data.json\", \"\"]\n: Returns all data from users files\n\n\n\n\nExample:\n\n\n@cmd \nfileQuery\n, [\ndata/users/*/data.json\n, \ntopics\n], (topics) =\n\n    topics.sort (a, b) -\n # Sort by date\n        return a.added - b.added\n    for topic in topics\n        @log topic.topic_id, topic.inner_path, topic.title\n\n\n\n\n\n\nfileRules \ninner_path\n\n\nReturn the rules for the file.\n\n\n\n\n\n\n\n\nParameter\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\ninner_path\n\n\nFile inner path\n\n\n\n\n\n\n\n\nReturn\n: \n Matched content\n\n\nExample result:\n\n\n{\n    \ncurrent_size\n: 2485,\n    \ncert_signers\n: {\nzeroid.bit\n: [\n1iD5ZQJMNXu43w1qLB8sfdHVKppVMduGz\n]},\n    \nfiles_allowed\n: \ndata.json\n,\n    \nsigners\n: [\n1J3rJ8ecnwH2EPYa6MrgZttBNc61ACFiCj\n],\n    \nuser_address\n: \n1J3rJ8ecnwH2EPYa6MrgZttBNc61ACFiCj\n,\n    \nmax_size\n: 100000\n}\n\n\n\n\nExample:\n\n\n@cmd \nfileRules\n, \ndata/users/1J3rJ8ecnwH2EPYa6MrgZttBNc61ACFiCj/content.json\n, (rules) =\n\n    @log rules\n\n\n\n\n\n\nfileWrite \ninner_path, content\n\n\nWrite file content\n\n\n\n\n\n\n\n\nParameter\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\ninner_path\n\n\nInner path of the file you want to write\n\n\n\n\n\n\ncontent\n\n\nContent you want to write to file (base64 encoded)\n\n\n\n\n\n\n\n\nReturn\n: \"ok\" on success else the error message\n\n\nExample:\n\n\nwriteData: (cb=null) -\n\n    # Encode to json, encode utf8\n    json_raw = unescape(encodeURIComponent(JSON.stringify({\nhello\n: \nZeroNet\n}, undefined, '\\t')))\n    # Convert to to base64 and send\n    @cmd \nfileWrite\n, [\ndata.json\n, btoa(json_raw)], (res) =\n\n        if res == \nok\n\n            if cb then cb(true)\n        else\n            @cmd \nwrapperNotification\n, [\nerror\n, \nFile write error: #{res}\n]\n            if cb then cb(false)\n\n\n\n\nNote:\n to write files that not in content.json yet, you must have \n\"own\": true\n in \ndata/sites.json\n at the site you want to write\n\n\n\n\nserverInfo\n\n\nReturn:\n \n All information about the server\n\n\nExample:\n\n\n@cmd \nserverInfo\n, {}, (server_info) =\n\n    @log \nServer info:\n, server_info\n\n\n\n\nExample return value:\n\n\n{\n    \ndebug\n: true, # Running in debug mode\n    \nfileserver_ip\n: \n*\n, # Fileserver binded to\n    \nfileserver_port\n: 15441, # FileServer port\n    \nip_external\n: true, # Active of passive mode\n    \nplatform\n: \nwin32\n, # Operating system\n    \nui_ip\n: \n127.0.0.1\n, # UiServer binded to\n    \nui_port\n: 43110, # UiServer port (Web)\n    \nversion\n: \n0.2.5\n # Version\n}\n\n\n\n\n\n\nsiteInfo\n\n\nReturn\n: \n All information about the site\n\n\nExample:\n\n\n@cmd \nsiteInfo\n, {}, (site_info) =\n\n    @log \nSite info:\n, site_info\n\n\n\n\nExample return value:\n\n\n{\n    \ntasks\n: 0, # Number of files currently under download\n    \nsize_limit\n: 10, # Current site size limit in MB\n    \naddress\n: \n1EU1tbG9oC1A8jz2ouVwGZyQ5asrNsE4Vr\n, # Site address\n    \nnext_size_limit\n: 10, # Size limit required by sum of site's files\n    \nauth_address\n: \n2D6xXUmCVAXGrbVUGRRJdS4j1hif1EMfae\n, # Current user's bitcoin address\n    \nauth_key_sha512\n: \n269a0f4c1e0c697b9d56ccffd9a9748098e51acc5d2807adc15a587779be13cf\n, # Deprecated, dont use\n    \npeers\n: 14, # Peers of site\n    \nauth_key\n: \npOBdl00EJ29Ad8OmVIc763k4\n, # Deprecated, dont use\n    \nsettings\n:  {\n        \npeers\n: 13, # Saved peers num for sorting\n        \nserving\n: true, # Site enabled\n        \nmodified\n: 1425344149.365, # Last modification time of all site's files\n        \nown\n: true, # Own site\n        \npermissions\n: [\nADMIN\n], # Site's permission\n        \nsize\n: 342165 # Site total size in bytes\n    },\n    \nbad_files\n: 0, # Files that needs to be download\n    \nworkers\n: 0, # Current concurent downloads\n    \ncontent\n: { # Root content.json\n        \nfiles\n: 12, # Number of file, detailed file info removed to reduce data transfer and parse time\n        \ndescription\n: \nThis site\n,\n        \ntitle\n: \nZeroHello\n,\n        \nsigns_required\n: 1,\n        \nmodified\n: 1425344149.365,\n        \nignore\n: \n(js|css)/(?!all.(js|css))\n,\n        \nsigners_sign\n: null,\n        \naddress\n: \n1EU1tbG9oC1A8jz2ouVwGZyQ5asrNsE4Vr\n,\n        \nzeronet_version\n: \n0.2.5\n,\n        \nincludes\n: 0\n    },\n    \ncert_user_id\n: \nzeronetuser@zeroid.bit\n, # Currently selected certificate for the site\n    \nstarted_task_num\n: 1, # Last number of files downloaded\n    \ncontent_updated\n: 1426008289.71 # Content.json update time\n}\n\n\n\n\n\n\nsitePublish \n[privatekey], [inner_path], [sign]\n\n\nPublish a content.json of the site\n\n\n\n\n\n\n\n\nParameter\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nprivatekey\n (optional)\n\n\nPrivate key used for signing (default: current user's privatekey)\n\n\n\n\n\n\ninner_path\n (optional)\n\n\nInner path of the content json you want to publish (default: content.json)\n\n\n\n\n\n\nsign\n (optional)\n\n\nIf True then sign the content.json before publish (default: True)\n\n\n\n\n\n\n\n\nReturn\n: \"ok\" on success else the error message\n\n\nExample:\n\n\n# Prompt the private key\n@cmd \nwrapperPrompt\n, [\nEnter your private key:\n, \npassword\n], (privatekey) =\n\n    $(\n.publishbar .button\n).addClass(\nloading\n)\n    # Send sign content.json and publish request to server\n    @cmd \nsitePublish\n, [privatekey], (res) =\n\n        $(\n.publishbar .button\n).removeClass(\nloading\n)\n        @log \nPublish result:\n, res\n\n\n\n\n\n\nsiteSign \n[privatekey], [inner_path]\n\n\nSign a content.json of the site\n\n\n\n\n\n\n\n\nParameter\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nprivatekey\n (optional)\n\n\nPrivate key used for signing (default: current user's privatekey)\n\n\n\n\n\n\ninner_path\n (optional)\n\n\nInner path of the content json you want to sign (default: content.json)\n\n\n\n\n\n\n\n\nReturn\n: \"ok\" on success else the error message\n\n\n\n\nNote:\n\nUse \"stored\" as privatekey if its definied in users.json (eg. cloned sites)\n\n\n\n\nExample:\n\n\nif @site_info[\nprivatekey\n] # Private key stored in users.json\n    @cmd \nsiteSign\n, [\nstored\n, \ncontent.json\n], (res) =\n\n        @log \nSign result\n, res\n\n\n\n\n\n\nsiteUpdate \naddress\n\n\nForce check and download changed content from other peers (only necessary if user is in passive mode and using old version of Zeronet)\n\n\n\n\n\n\n\n\nParameter\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\naddress\n\n\nAddress of site want to update (only current site allowed without site ADMIN permission)\n\n\n\n\n\n\n\n\nReturn:\n None\n\n\nExample:\n\n\n# Manual site update for passive connections\nupdateSite: =\n\n    $(\n#passive_error a\n).addClass(\nloading\n).removeClassLater(\nloading\n, 1000)\n    @log \nUpdating site...\n\n    @cmd \nsiteUpdate\n, {\naddress\n: @site_info.address}\n\n\n\n\n\n\nPlugin: CryptMessage\n\n\nuserPublickey \n[index]\n\n\nGet user's site specific publickey\n\n\n\n\n\n\n\n\nParameter\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nindex\n (optional)\n\n\nSub-publickey within site (default: 0)\n\n\n\n\n\n\n\n\nReturn\n: base64 encoded publickey\n\n\n\n\neciesEncrypt \ntext, [publickey], [return_aes_key]\n\n\nEncrypt a text using a publickey\n\n\n\n\n\n\n\n\nParameter\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\ntext\n\n\nText to encrypt\n\n\n\n\n\n\npublickey\n (optional)\n\n\nUser's publickey index (int) or base64 encoded publickey (default: 0)\n\n\n\n\n\n\nreturn_aes_key\n (optional)\n\n\nGet the AES key used in encryption (default: False)\n\n\n\n\n\n\n\n\nReturn\n: Encrypted text in base64 format or [Encrypted text in base64 format, AES key in base64 format]\n\n\n\n\neciesDecrypt \nparams, [privatekey]\n\n\nTry to decrypt list of texts\n\n\n\n\n\n\n\n\nParameter\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nparams\n\n\nA text or list of encrypted texts\n\n\n\n\n\n\nprivatekey\n (optional)\n\n\nUser's privatekey index (int) or base64 encoded privatekey (default: 0)\n\n\n\n\n\n\n\n\nReturn\n: Decrypted text or list of decrypted texts (null for failed decodings)\n\n\n\n\naesEncrypt \ntext, [key], [iv]\n\n\nEncrypt a text using the key and the iv\n\n\n\n\n\n\n\n\nParameter\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\ntext\n\n\nA text encrypt using AES\n\n\n\n\n\n\nkey\n (optional)\n\n\nBase64 encoded password (default: generate new)\n\n\n\n\n\n\niv\n (optional)\n\n\nBase64 encoded iv (default: generate new)\n\n\n\n\n\n\n\n\nReturn\n: [base64 encoded key, base64 encoded iv, base64 encoded encrypted text]\n\n\n\n\naesDecrypt \niv, encrypted_text, key\n\n\naesDecrypt \nencrypted_texts, keys\n\n\nDecrypt text using the IV and AES key\n\n\n\n\n\n\n\n\nParameter\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\niv\n\n\nIV in Base64 format\n\n\n\n\n\n\nencrypted_text\n\n\nEncrypted text in Base64 format\n\n\n\n\n\n\nencrypted_texts\n\n\nList of [base64 encoded iv, base64 encoded encrypted text] pairs\n\n\n\n\n\n\nkey\n\n\nBase64 encoded password for the text\n\n\n\n\n\n\nkeys\n\n\nKeys for decoding (tries every one for every pairs)\n\n\n\n\n\n\n\n\nReturn\n: Decoded text or list of decoded texts\n\n\n\n\nPlugin: Newsfeed\n\n\nfeedFollow \nfeeds\n\n\nSet followed sql queries.\n\n\nThe SQL query should result in rows with cols:\n\n\n\n\n\n\n\n\nField\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\ntype\n\n\nType: post, article, comment, mention\n\n\n\n\n\n\ndate_added\n\n\nEvent time\n\n\n\n\n\n\ntitle\n\n\nEvent's first line to be displayed\n\n\n\n\n\n\nbody\n\n\nEvent's second and third line\n\n\n\n\n\n\nurl\n\n\nLink to event's page\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nParameter\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nfeeds\n\n\nFormat: {\"query name\": [SQL query, [param1, param2, ...], ...}, parameters will be escaped, joined by \n,\n inserted in place of \n:params\n in the Sql query.\n\n\n\n\n\n\n\n\nReturn\n: ok\n\n\nExample:\n\n\n# Follow ZeroBlog posts\nquery = \n\n    SELECT\n     post_id AS event_uri,\n     'post' AS type,\n     date_published AS date_added,\n     title AS title,\n     body AS body,\n     '?Post:' || post_id AS url\n    FROM post\n\n\nparams = [\n]\nPage.cmd feedFollow [{\nPosts\n: [query, params]}]\n\n\n\n\n\n\nfeedListFollow\n\n\nReturn of current followed feeds\n\n\nReturn\n: The currently followed feeds in the same format as in the feedFollow commands\n\n\n\n\nfeedQuery\n\n\nExecute all followed sql query\n\n\nReturn\n: The result of the followed Sql queries\n\n\n\n\nPlugin: MergerSite\n\n\nmergerSiteAdd \naddresses\n\n\nStart downloading new merger site(s)\n\n\n\n\n\n\n\n\nParameter\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\naddresses\n\n\nSite address or list of site addresses\n\n\n\n\n\n\n\n\n\n\nmergerSiteDelete \naddress\n\n\nStop seeding and delete a merged site\n\n\n\n\n\n\n\n\nParameter\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\naddress\n\n\nSite address\n\n\n\n\n\n\n\n\n\n\nmergerSiteList \n[query_site_info]\n\n\nReturn merged sites.\n\n\n\n\n\n\n\n\nParameter\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nquery_site_info\n\n\nIf True, then gives back detailed site info for merged sites\n\n\n\n\n\n\n\n\n\n\nAdmin commands\n\n\n(requires ADMIN permission in data/sites.json)\n\n\n\n\nconfigSet \nkey, value\n\n\nCreate or update an entry in ZeroNet config file. (zeronet.conf by default)\n\n\n\n\n\n\n\n\nParameter\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nkey\n\n\nConfiguration entry name\n\n\n\n\n\n\nvalue\n\n\nConfiguration entry new value\n\n\n\n\n\n\n\n\nReturn\n: ok\n\n\n\n\ncertSet \ndomain\n\n\nSet the used certificate for current site.\n\n\n\n\n\n\n\n\nParameter\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\ndomain\n\n\nDomain of the certificate issuer\n\n\n\n\n\n\n\n\nReturn\n: None\n\n\n\n\nchannelJoinAllsite \nchannel\n\n\nRequest notifications about every site's events.\n\n\n\n\n\n\n\n\nParameter\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nchannel\n\n\nChannel to join (see channelJoin)\n\n\n\n\n\n\n\n\nReturn\n: None\n\n\n\n\nserverPortcheck\n\n\nStart checking if port is opened\n\n\nReturn\n: True (port opened) or False (port closed)\n\n\n\n\nserverShutdown\n\n\nStop running ZeroNet client.\n\n\nReturn\n: None\n\n\n\n\nserverUpdate\n\n\nRe-download ZeroNet from github.\n\n\nReturn\n: None\n\n\n\n\nsiteClone \naddress\n\n\nCopy site files into a new one.\n\n\nEvery file and directory will be skipped if it has a \n-default\n subfixed version and the subfixed version will be copied instead of it.\n\n\nEg. If you have a \ndata\n and a \ndata-default\n directory: The \ndata\n directory will not be copied and the \ndata-default\n directory will be renamed to data.\n\n\n\n\n\n\n\n\nParameter\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\naddress\n\n\nAddress of site want to clone\n\n\n\n\n\n\n\n\nReturn\n: None, automatically redirects to new site on completion\n\n\n\n\nsiteList\n\n\nReturn\n: \n SiteInfo list of all downloaded sites\n\n\n\n\nsitePause \naddress\n\n\nPause site serving\n\n\n\n\n\n\n\n\nParameter\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\naddress\n\n\nAddress of site want to pause\n\n\n\n\n\n\n\n\nReturn\n: None\n\n\n\n\nsiteResume \naddress\n\n\nResume site serving\n\n\n\n\n\n\n\n\nParameter\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\naddress\n\n\nAddress of site want to resume\n\n\n\n\n\n\n\n\nReturn\n: None", 
            "title": "\u0421\u043f\u0440\u0430\u0432\u043a\u0430 \u043f\u043e ZeroFrame API"
        }, 
        {
            "location": "/site_development/zeroframe_api_reference/#zeroframe-api-reference", 
            "text": "", 
            "title": "ZeroFrame API Reference"
        }, 
        {
            "location": "/site_development/zeroframe_api_reference/#wrapper", 
            "text": "These commands handled by wrapper frame and does not sent to UiServer using websocket", 
            "title": "Wrapper"
        }, 
        {
            "location": "/site_development/zeroframe_api_reference/#wrapperconfirm-message-button_caption", 
            "text": "Display a notification with confirm button     Parameter  Description      message  The message you want to display    button_caption  (optional)  Caption of the confirmation button (default: OK)     Return : True if clicked on button  Example:  # Delete site\nsiteDelete: (address) - \n    site = @sites[address]\n    title = site.content.title\n    if title.length   40\n        title = title.substring(0, 15)+ ... +title.substring(title.length-10)\n    @cmd  wrapperConfirm , [ Are you sure you sure?  b #{title} /b ,  Delete ], (confirmed) = \n        @log  Deleting #{site.address}... , confirmed\n        if confirmed\n            $( .site-#{site.address} ).addClass( deleted )\n            @cmd  siteDelete , { address : address}", 
            "title": "wrapperConfirm message, [button_caption]"
        }, 
        {
            "location": "/site_development/zeroframe_api_reference/#wrappergetlocalstorage", 
            "text": "Return : Browser's local store for the site  Example:  @cmd  wrapperGetLocalStorage , [], (res) = \n    res ?= {}\n    @log  Local storage value: , res", 
            "title": "wrapperGetLocalStorage"
        }, 
        {
            "location": "/site_development/zeroframe_api_reference/#wrapperpermissionadd-permission", 
            "text": "Request new permission for site     Parameter  Description      permission  Name of permission (eg. Merger:ZeroMe)", 
            "title": "wrapperPermissionAdd permission"
        }, 
        {
            "location": "/site_development/zeroframe_api_reference/#wrappersetlocalstorage-data", 
            "text": "Set browser's local store data stored for the site     Parameter  Description      data  Any data structure you want to store for the site     Return : None  Example:  Page.local_storage[ topic.#{@topic_id}_#{@topic_user_id}.visited ] = Time.timestamp()\nPage.cmd  wrapperSetLocalStorage , Page.local_storage", 
            "title": "wrapperSetLocalStorage data"
        }, 
        {
            "location": "/site_development/zeroframe_api_reference/#wrappernotification-type-message-timeout", 
            "text": "Display a notification     Parameter  Description      type  Possible values: info, error, done    message  The message you want to display    timeout  (optional)  Hide display after this interval (milliseconds)     Return : None  Example:  @cmd  wrapperNotification , [ done ,  Your registration has been sent! , 10000]", 
            "title": "wrapperNotification type, message, [timeout]"
        }, 
        {
            "location": "/site_development/zeroframe_api_reference/#wrapperprompt-message-type", 
            "text": "Prompt text input from user     Parameter  Description      message  The message you want to display    type  (optional)  Type of the input (default: text)     Return : Text entered to input  Example:  # Prompt the private key\n@cmd  wrapperPrompt , [ Enter your private key: ,  password ], (privatekey) = \n    $( .publishbar .button ).addClass( loading )\n    # Send sign content.json and publish request to server\n    @cmd  sitePublish , [privatekey], (res) = \n        $( .publishbar .button ).removeClass( loading )\n        @log  Publish result: , res", 
            "title": "wrapperPrompt message, [type]"
        }, 
        {
            "location": "/site_development/zeroframe_api_reference/#wrappersetviewport-viewport", 
            "text": "Set sites's viewport meta tag content (required for mobile sites)     Parameter  Description      viewport  The viewport meta tag content     Return : None  Example:  # Prompt the private key\n@cmd  wrapperSetViewport ,  width=device-width, initial-scale=1.0", 
            "title": "wrapperSetViewport viewport"
        }, 
        {
            "location": "/site_development/zeroframe_api_reference/#uiserver", 
            "text": "The UiServer is for ZeroNet what the LAMP setup is for normal websites.  The UiServer will do all the 'backend' work (eg: querying the DB, accessing files, etc). This are the API calls you will need to make your site dynamic.", 
            "title": "UiServer"
        }, 
        {
            "location": "/site_development/zeroframe_api_reference/#certadd-domain-auth_type-auth_user_name-cert", 
            "text": "Add a new certificate to current user.     Parameter  Description      domain  Certificate issuer domain    auth_type  Auth type used on registration    auth_user_name  User name used on registration    cert  The cert itself:  auth_address#auth_type/auth_user_name  string signed by the cert site owner     Return : \"ok\", \"Not changed\" or {\"error\": error_message}  Example:  @cmd  certAdd , [ zeroid.bit , auth_type, user_name, cert_sign], (res) = \n    $( .ui ).removeClass( flipped )\n    if res.error\n        @cmd  wrapperNotification , [ error ,  #{res.error} ]", 
            "title": "certAdd domain, auth_type, auth_user_name, cert"
        }, 
        {
            "location": "/site_development/zeroframe_api_reference/#certselect-accepted_domains", 
            "text": "Display certificate selector.     Parameter  Description      accepted_domains  List of domains that accepted by site as authorization provider     Return : None  Example:  @cmd  certSelect , { accepted_domains : [ zeroid.bit ]}", 
            "title": "certSelect accepted_domains"
        }, 
        {
            "location": "/site_development/zeroframe_api_reference/#channeljoin-channel", 
            "text": "Request notifications about sites's events.     Parameter  Description      channel  Channel to join     Return : None  Channels :   siteChanged  (joined by default) Events: peers_added, file_started, file_done, file_failed   Example :  # Wrapper websocket connection ready\nonOpenWebsocket: (e) = \n    @cmd  channelJoinAllsite , { channel :  siteChanged }\n\n# Route incoming requests and messages\nroute: (cmd, data) - \n    if cmd ==  setSiteInfo \n        @log  Site changed , data\n    else\n        @log  Unknown command , cmd, data  Example event data  {\n     tasks :0,\n     size_limit :10,\n     address : 1RivERqttrjFqwp9YH1FviduBosQPtdBN ,\n     next_size_limit :10,\n     event :[  file_done ,  index.html  ],\n    [...] # Same as siteInfo return dict\n}", 
            "title": "channelJoin channel"
        }, 
        {
            "location": "/site_development/zeroframe_api_reference/#dbquery-query", 
            "text": "Run a query on the sql cache     Parameter  Description      query  Sql query command     Return :   Result of the query  Example:  @log  Updating user info... , @my_address\nPage.cmd  dbQuery , [ SELECT user.*, json.json_id AS data_json_id FROM user LEFT JOIN json USING(path) WHERE path='#{@my_address}/data.json' ], (res) = \n    if res.error or res.length == 0 # Db not ready yet or No user found\n        $( .head-user.visitor ).css( display ,  )\n        $( .user_name-my ).text( Visitor )\n        if cb then cb()\n        return\n\n    @my_row = res[0]\n    @my_id = @my_row[ user_id ]\n    @my_name = @my_row[ user_name ]\n    @my_max_size = @my_row[ max_size ]", 
            "title": "dbQuery query"
        }, 
        {
            "location": "/site_development/zeroframe_api_reference/#fileget-inner_path-required", 
            "text": "Get file content     Parameter  Description      inner_path  The file you want to get    required  (optional)  Try and wait for the file if it's not exists. (default: True)     Return :   The content of the file  Example:  # Upvote a topic on ZeroTalk\nsubmitTopicVote: (e) = \n    if not Users.my_name # Not registered\n        Page.cmd  wrapperNotification , [ info ,  Please, request access before posting. ]\n        return false\n\n    elem = $(e.currentTarget)\n    elem.toggleClass( active ).addClass( loading )\n    inner_path =  data/users/#{Users.my_address}/data.json \n\n    Page.cmd  fileGet , [inner_path], (data) = \n        data = JSON.parse(data)\n        data.topic_votes ?= {} # Create if not exits\n        topic_address = elem.parents( .topic ).data( topic_address )\n\n        if elem.hasClass( active ) # Add upvote to topic\n            data.topic_votes[topic_address] = 1\n        else # Remove upvote from topic\n            delete data.topic_votes[topic_address]\n\n        # Write file and publish to other peers\n        Page.writePublish inner_path, Page.jsonEncode(data), (res) = \n            elem.removeClass( loading )\n            if res == true\n                @log  File written \n            else # Failed\n                elem.toggleClass( active ) # Change back\n\n    return false", 
            "title": "fileGet inner_path, [required]"
        }, 
        {
            "location": "/site_development/zeroframe_api_reference/#filedelete-inner_path", 
            "text": "Get file content     Parameter  Description      inner_path  The file you want to delete     Return : \"ok\" on success else the error message", 
            "title": "fileDelete inner_path"
        }, 
        {
            "location": "/site_development/zeroframe_api_reference/#filequery-dir_inner_path-query", 
            "text": "Simple json file query command     Parameter  Description      dir_inner_path  Pattern of queried files    query  Query command     Return :   Matched content  Query examples:   [\"data/users/*/data.json\", \"topics\"] : Returns all topics node from all user files  [\"data/users/*/data.json\", \"comments.1@2\"] : Returns  user_data[\"comments\"][\"1@2\"]  value from all user files  [\"data/users/*/data.json\", \"\"] : Returns all data from users files   Example:  @cmd  fileQuery , [ data/users/*/data.json ,  topics ], (topics) = \n    topics.sort (a, b) -  # Sort by date\n        return a.added - b.added\n    for topic in topics\n        @log topic.topic_id, topic.inner_path, topic.title", 
            "title": "fileQuery dir_inner_path, query"
        }, 
        {
            "location": "/site_development/zeroframe_api_reference/#filerules-inner_path", 
            "text": "Return the rules for the file.     Parameter  Description      inner_path  File inner path     Return :   Matched content  Example result:  {\n     current_size : 2485,\n     cert_signers : { zeroid.bit : [ 1iD5ZQJMNXu43w1qLB8sfdHVKppVMduGz ]},\n     files_allowed :  data.json ,\n     signers : [ 1J3rJ8ecnwH2EPYa6MrgZttBNc61ACFiCj ],\n     user_address :  1J3rJ8ecnwH2EPYa6MrgZttBNc61ACFiCj ,\n     max_size : 100000\n}  Example:  @cmd  fileRules ,  data/users/1J3rJ8ecnwH2EPYa6MrgZttBNc61ACFiCj/content.json , (rules) = \n    @log rules", 
            "title": "fileRules inner_path"
        }, 
        {
            "location": "/site_development/zeroframe_api_reference/#filewrite-inner_path-content", 
            "text": "Write file content     Parameter  Description      inner_path  Inner path of the file you want to write    content  Content you want to write to file (base64 encoded)     Return : \"ok\" on success else the error message  Example:  writeData: (cb=null) - \n    # Encode to json, encode utf8\n    json_raw = unescape(encodeURIComponent(JSON.stringify({ hello :  ZeroNet }, undefined, '\\t')))\n    # Convert to to base64 and send\n    @cmd  fileWrite , [ data.json , btoa(json_raw)], (res) = \n        if res ==  ok \n            if cb then cb(true)\n        else\n            @cmd  wrapperNotification , [ error ,  File write error: #{res} ]\n            if cb then cb(false)  Note:  to write files that not in content.json yet, you must have  \"own\": true  in  data/sites.json  at the site you want to write", 
            "title": "fileWrite inner_path, content"
        }, 
        {
            "location": "/site_development/zeroframe_api_reference/#serverinfo", 
            "text": "Return:    All information about the server  Example:  @cmd  serverInfo , {}, (server_info) = \n    @log  Server info: , server_info  Example return value:  {\n     debug : true, # Running in debug mode\n     fileserver_ip :  * , # Fileserver binded to\n     fileserver_port : 15441, # FileServer port\n     ip_external : true, # Active of passive mode\n     platform :  win32 , # Operating system\n     ui_ip :  127.0.0.1 , # UiServer binded to\n     ui_port : 43110, # UiServer port (Web)\n     version :  0.2.5  # Version\n}", 
            "title": "serverInfo"
        }, 
        {
            "location": "/site_development/zeroframe_api_reference/#siteinfo", 
            "text": "Return :   All information about the site  Example:  @cmd  siteInfo , {}, (site_info) = \n    @log  Site info: , site_info  Example return value:  {\n     tasks : 0, # Number of files currently under download\n     size_limit : 10, # Current site size limit in MB\n     address :  1EU1tbG9oC1A8jz2ouVwGZyQ5asrNsE4Vr , # Site address\n     next_size_limit : 10, # Size limit required by sum of site's files\n     auth_address :  2D6xXUmCVAXGrbVUGRRJdS4j1hif1EMfae , # Current user's bitcoin address\n     auth_key_sha512 :  269a0f4c1e0c697b9d56ccffd9a9748098e51acc5d2807adc15a587779be13cf , # Deprecated, dont use\n     peers : 14, # Peers of site\n     auth_key :  pOBdl00EJ29Ad8OmVIc763k4 , # Deprecated, dont use\n     settings :  {\n         peers : 13, # Saved peers num for sorting\n         serving : true, # Site enabled\n         modified : 1425344149.365, # Last modification time of all site's files\n         own : true, # Own site\n         permissions : [ ADMIN ], # Site's permission\n         size : 342165 # Site total size in bytes\n    },\n     bad_files : 0, # Files that needs to be download\n     workers : 0, # Current concurent downloads\n     content : { # Root content.json\n         files : 12, # Number of file, detailed file info removed to reduce data transfer and parse time\n         description :  This site ,\n         title :  ZeroHello ,\n         signs_required : 1,\n         modified : 1425344149.365,\n         ignore :  (js|css)/(?!all.(js|css)) ,\n         signers_sign : null,\n         address :  1EU1tbG9oC1A8jz2ouVwGZyQ5asrNsE4Vr ,\n         zeronet_version :  0.2.5 ,\n         includes : 0\n    },\n     cert_user_id :  zeronetuser@zeroid.bit , # Currently selected certificate for the site\n     started_task_num : 1, # Last number of files downloaded\n     content_updated : 1426008289.71 # Content.json update time\n}", 
            "title": "siteInfo"
        }, 
        {
            "location": "/site_development/zeroframe_api_reference/#sitepublish-privatekey-inner_path-sign", 
            "text": "Publish a content.json of the site     Parameter  Description      privatekey  (optional)  Private key used for signing (default: current user's privatekey)    inner_path  (optional)  Inner path of the content json you want to publish (default: content.json)    sign  (optional)  If True then sign the content.json before publish (default: True)     Return : \"ok\" on success else the error message  Example:  # Prompt the private key\n@cmd  wrapperPrompt , [ Enter your private key: ,  password ], (privatekey) = \n    $( .publishbar .button ).addClass( loading )\n    # Send sign content.json and publish request to server\n    @cmd  sitePublish , [privatekey], (res) = \n        $( .publishbar .button ).removeClass( loading )\n        @log  Publish result: , res", 
            "title": "sitePublish [privatekey], [inner_path], [sign]"
        }, 
        {
            "location": "/site_development/zeroframe_api_reference/#sitesign-privatekey-inner_path", 
            "text": "Sign a content.json of the site     Parameter  Description      privatekey  (optional)  Private key used for signing (default: current user's privatekey)    inner_path  (optional)  Inner path of the content json you want to sign (default: content.json)     Return : \"ok\" on success else the error message   Note: \nUse \"stored\" as privatekey if its definied in users.json (eg. cloned sites)   Example:  if @site_info[ privatekey ] # Private key stored in users.json\n    @cmd  siteSign , [ stored ,  content.json ], (res) = \n        @log  Sign result , res", 
            "title": "siteSign [privatekey], [inner_path]"
        }, 
        {
            "location": "/site_development/zeroframe_api_reference/#siteupdate-address", 
            "text": "Force check and download changed content from other peers (only necessary if user is in passive mode and using old version of Zeronet)     Parameter  Description      address  Address of site want to update (only current site allowed without site ADMIN permission)     Return:  None  Example:  # Manual site update for passive connections\nupdateSite: = \n    $( #passive_error a ).addClass( loading ).removeClassLater( loading , 1000)\n    @log  Updating site... \n    @cmd  siteUpdate , { address : @site_info.address}", 
            "title": "siteUpdate address"
        }, 
        {
            "location": "/site_development/zeroframe_api_reference/#plugin-cryptmessage", 
            "text": "", 
            "title": "Plugin: CryptMessage"
        }, 
        {
            "location": "/site_development/zeroframe_api_reference/#userpublickey-index", 
            "text": "Get user's site specific publickey     Parameter  Description      index  (optional)  Sub-publickey within site (default: 0)     Return : base64 encoded publickey", 
            "title": "userPublickey [index]"
        }, 
        {
            "location": "/site_development/zeroframe_api_reference/#eciesencrypt-text-publickey-return_aes_key", 
            "text": "Encrypt a text using a publickey     Parameter  Description      text  Text to encrypt    publickey  (optional)  User's publickey index (int) or base64 encoded publickey (default: 0)    return_aes_key  (optional)  Get the AES key used in encryption (default: False)     Return : Encrypted text in base64 format or [Encrypted text in base64 format, AES key in base64 format]", 
            "title": "eciesEncrypt text, [publickey], [return_aes_key]"
        }, 
        {
            "location": "/site_development/zeroframe_api_reference/#eciesdecrypt-params-privatekey", 
            "text": "Try to decrypt list of texts     Parameter  Description      params  A text or list of encrypted texts    privatekey  (optional)  User's privatekey index (int) or base64 encoded privatekey (default: 0)     Return : Decrypted text or list of decrypted texts (null for failed decodings)", 
            "title": "eciesDecrypt params, [privatekey]"
        }, 
        {
            "location": "/site_development/zeroframe_api_reference/#aesencrypt-text-key-iv", 
            "text": "Encrypt a text using the key and the iv     Parameter  Description      text  A text encrypt using AES    key  (optional)  Base64 encoded password (default: generate new)    iv  (optional)  Base64 encoded iv (default: generate new)     Return : [base64 encoded key, base64 encoded iv, base64 encoded encrypted text]", 
            "title": "aesEncrypt text, [key], [iv]"
        }, 
        {
            "location": "/site_development/zeroframe_api_reference/#aesdecrypt-iv-encrypted_text-key", 
            "text": "", 
            "title": "aesDecrypt iv, encrypted_text, key"
        }, 
        {
            "location": "/site_development/zeroframe_api_reference/#aesdecrypt-encrypted_texts-keys", 
            "text": "Decrypt text using the IV and AES key     Parameter  Description      iv  IV in Base64 format    encrypted_text  Encrypted text in Base64 format    encrypted_texts  List of [base64 encoded iv, base64 encoded encrypted text] pairs    key  Base64 encoded password for the text    keys  Keys for decoding (tries every one for every pairs)     Return : Decoded text or list of decoded texts", 
            "title": "aesDecrypt encrypted_texts, keys"
        }, 
        {
            "location": "/site_development/zeroframe_api_reference/#plugin-newsfeed", 
            "text": "", 
            "title": "Plugin: Newsfeed"
        }, 
        {
            "location": "/site_development/zeroframe_api_reference/#feedfollow-feeds", 
            "text": "Set followed sql queries.  The SQL query should result in rows with cols:     Field  Description      type  Type: post, article, comment, mention    date_added  Event time    title  Event's first line to be displayed    body  Event's second and third line    url  Link to event's page        Parameter  Description      feeds  Format: {\"query name\": [SQL query, [param1, param2, ...], ...}, parameters will be escaped, joined by  ,  inserted in place of  :params  in the Sql query.     Return : ok  Example:  # Follow ZeroBlog posts\nquery =  \n    SELECT\n     post_id AS event_uri,\n     'post' AS type,\n     date_published AS date_added,\n     title AS title,\n     body AS body,\n     '?Post:' || post_id AS url\n    FROM post \nparams = [ ]\nPage.cmd feedFollow [{ Posts : [query, params]}]", 
            "title": "feedFollow feeds"
        }, 
        {
            "location": "/site_development/zeroframe_api_reference/#feedlistfollow", 
            "text": "Return of current followed feeds  Return : The currently followed feeds in the same format as in the feedFollow commands", 
            "title": "feedListFollow"
        }, 
        {
            "location": "/site_development/zeroframe_api_reference/#feedquery", 
            "text": "Execute all followed sql query  Return : The result of the followed Sql queries", 
            "title": "feedQuery"
        }, 
        {
            "location": "/site_development/zeroframe_api_reference/#plugin-mergersite", 
            "text": "", 
            "title": "Plugin: MergerSite"
        }, 
        {
            "location": "/site_development/zeroframe_api_reference/#mergersiteadd-addresses", 
            "text": "Start downloading new merger site(s)     Parameter  Description      addresses  Site address or list of site addresses", 
            "title": "mergerSiteAdd addresses"
        }, 
        {
            "location": "/site_development/zeroframe_api_reference/#mergersitedelete-address", 
            "text": "Stop seeding and delete a merged site     Parameter  Description      address  Site address", 
            "title": "mergerSiteDelete address"
        }, 
        {
            "location": "/site_development/zeroframe_api_reference/#mergersitelist-query_site_info", 
            "text": "Return merged sites.     Parameter  Description      query_site_info  If True, then gives back detailed site info for merged sites", 
            "title": "mergerSiteList [query_site_info]"
        }, 
        {
            "location": "/site_development/zeroframe_api_reference/#admin-commands", 
            "text": "(requires ADMIN permission in data/sites.json)", 
            "title": "Admin commands"
        }, 
        {
            "location": "/site_development/zeroframe_api_reference/#configset-key-value", 
            "text": "Create or update an entry in ZeroNet config file. (zeronet.conf by default)     Parameter  Description      key  Configuration entry name    value  Configuration entry new value     Return : ok", 
            "title": "configSet key, value"
        }, 
        {
            "location": "/site_development/zeroframe_api_reference/#certset-domain", 
            "text": "Set the used certificate for current site.     Parameter  Description      domain  Domain of the certificate issuer     Return : None", 
            "title": "certSet domain"
        }, 
        {
            "location": "/site_development/zeroframe_api_reference/#channeljoinallsite-channel", 
            "text": "Request notifications about every site's events.     Parameter  Description      channel  Channel to join (see channelJoin)     Return : None", 
            "title": "channelJoinAllsite channel"
        }, 
        {
            "location": "/site_development/zeroframe_api_reference/#serverportcheck", 
            "text": "Start checking if port is opened  Return : True (port opened) or False (port closed)", 
            "title": "serverPortcheck"
        }, 
        {
            "location": "/site_development/zeroframe_api_reference/#servershutdown", 
            "text": "Stop running ZeroNet client.  Return : None", 
            "title": "serverShutdown"
        }, 
        {
            "location": "/site_development/zeroframe_api_reference/#serverupdate", 
            "text": "Re-download ZeroNet from github.  Return : None", 
            "title": "serverUpdate"
        }, 
        {
            "location": "/site_development/zeroframe_api_reference/#siteclone-address", 
            "text": "Copy site files into a new one.  Every file and directory will be skipped if it has a  -default  subfixed version and the subfixed version will be copied instead of it.  Eg. If you have a  data  and a  data-default  directory: The  data  directory will not be copied and the  data-default  directory will be renamed to data.     Parameter  Description      address  Address of site want to clone     Return : None, automatically redirects to new site on completion", 
            "title": "siteClone address"
        }, 
        {
            "location": "/site_development/zeroframe_api_reference/#sitelist", 
            "text": "Return :   SiteInfo list of all downloaded sites", 
            "title": "siteList"
        }, 
        {
            "location": "/site_development/zeroframe_api_reference/#sitepause-address", 
            "text": "Pause site serving     Parameter  Description      address  Address of site want to pause     Return : None", 
            "title": "sitePause address"
        }, 
        {
            "location": "/site_development/zeroframe_api_reference/#siteresume-address", 
            "text": "Resume site serving     Parameter  Description      address  Address of site want to resume     Return : None", 
            "title": "siteResume address"
        }, 
        {
            "location": "/site_development/content_json/", 
            "text": "Structure of content.json\n\n\nEvery ZeroNet site will have a \ncontent.json\n file. (\nExample content.json file\n)\n\n\nThis file will carry, amont other things, a list of all files on your site and a signature created with your private key. This is done to avoid file tampering (ie: only you, or people you trust, can update the site content).\n\n\nHere is a list of supported keys:\n\n\nGenerated automatically\n\n\n\n\naddress\n\n\nYour site address\n\n\nExample\n: 1TaLk3zM7ZRskJvrh3ZNCDVGXvkJusPKQ\n\n\n\n\naddress_index\n\n\nThe site's address BIP32 sub-key index of your BIP32 seed. Auto-added when you clone a site. It allows to recover the site privatekey from your BIP32 seed.\n\n\nExample\n: 30926910\n\n\n\n\ncloned_from\n\n\nThe site address where the site is cloned from.\n\n\nExample\n: 1BLogC9LN4oPDcruNz3qo1ysa133E9AGg8\n\n\n\n\nfiles\n\n\nSize and sha512 hash of automatically downloaded files contained in your site. Automatically added by the command \nzeronet.py siteSign siteaddress privatekey\n.\n\n\nExample\n:\n\n\n    \ncss/all.css\n: {\n      \nsha512\n: \n869b09328f07bac538c313c4702baa5276544346418378199fa5cef644c139e8\n,\n      \nsize\n: 148208\n\n\n\n\n\n\nfiles_optional\n\n\nSize and sha512 hash of optional files contained in your site. Automatically added by the command \nzeronet.py siteSign siteaddress privatekey\n.\n\n\nExample\n:\n\n\n    \ndata/myvideo.mp4\n: {\n      \nsha512\n: \n538c09328aa52765443464135cef644c144346418378199fa5cef61837819538\n,\n      \nsize\n: 832103\n\n\n\n\n\n\nmodified\n\n\nTime when the content.json was generated.\n\n\nExample\n: 1425857522.076\n\n\n\n\nsign (deprecated)\n\n\nECDSA sign of the content.json file content. (keys sorted, without whitespace and the \nsign\n and \nsigners_sign\n nodes). For backward compatibility, will be removed soon.\n\n\nExample\n:\n\n\n  \nsign\n: [\n    43117356513690007125104018825100786623580298637039067305407092800990252156956,\n    94139380599940414070721501960181245022427741524702752954181461080408625270000\n  ],\n\n\n\n\n\n\nsigners_sign\n\n\nPossible signers address for the root content.json signed using the site address private key. (Multisig possibility)\n\n\nFormat of the signed string\n: [signers_required]:[signer address],[signer address]\n\n\nExample\n: \nHKNDz9IUHcBc/l2Jm2Bl70XQDL9HYHhJ2hUdg8AMyunACLgxyXBr7EW1/ME4hGkaFZSFmIxlInmxH+BrMVXbnLw=\n\n\n\n\nsigns\n\n\nECDSA signs for the the content.json file content. (keys sorted, without whitespace and the \nsign\n and \nsigners_sign\n nodes).\n\n\nExample\n:\n\n\n  \nsigns\n: {\n    \n1TaLk3zM7ZRskJvrh3ZNCDVGXvkJusPKQ\n: \nG6/QXFKvACPQ7LhoZG4fgqmeOSK99vGM2arVWkm9pV/WPCfc2ulv6iuQnuzw4v5z82qWswcRq907VPdBsdb9VRo=\n\n  },\n\n\n\n\n\n\nzeronet_version\n\n\nZeroNet version used to generate content.json file.\n\n\nExample\n: 0.2.5\n\n\n\n\nSettings\n\n\nbackground-color\n\n\nBackground color of the wrapper\n\n\nExample\n: #F5F5F5\n\n\n\n\ncloneable\n\n\nAllow to clone the site if \ntrue\n.\n\n\nTo make your site properly cloneable you have to add data files for clean start (eg. without any blog posts).\nTo do this you have to add \n-default\n postfix to your data files and directories.\nOn the cloning process every file and directory is skipped if it has \n-default\n postfixed alternative and then the \n-default\n postfix will be removed from the affected files and directories.\n\n\n\n\ndescription\n\n\nDescription of your site, displayed under site title on ZeroHello.\n\n\nExample\n: Decentralized forum demo\n\n\n\n\ndomain\n\n\nNamecoin domain name of your site. ZeroHello will link to this if the user has Zeroname plugin enabled.\n\n\nExample\n: Blog.ZeroNetwork.bit\n\n\n\n\nignore\n\n\nIgnore files from signing matching this preg pattern\n\n\nExample\n: \n((js|css)/(?!all.(js|css))|data/users/.*)\n (ignore all js and css files except all.js and all.css and don't add anything from data/users/ directory)\n\n\n\n\nincludes\n\n\nInclude an another content.json\n\n\nExample\n:\n\n\n{\n  \ndata/users/content.json\n: {\n    \nsigners\n: [ # Possible signers address for the file\n      \n1LSxsKfC9S9TVXGGNSM3vPHjyW82jgCX5f\n\n    ],\n    \nsigners_required\n: 1 # Valid signs required to accept the file (Multisig possibility),\n    \nfiles_allowed\n: \ndata.json\n, # Preg pattern for the allowed files in the include file\n    \nincludes_allowed\n: false, # Nested includes allowed or not\n    \nmax_size\n: 10000, # Max sum filesize allowed in the include (in bytes)\n  }\n}\n\n\n\n\n\n\nmerged_type\n\n\nData source for specified merger site type\n\n\nExample\n: \nZeroMe\n\n\n\n\noptional\n\n\nPreg pattern of optional files\n\n\nExample\n: \n(data/mp4/.*|updater/.*)\n (everything in data/mp4 and updater directory is optional)\n\n\n\n\nsigns_required\n\n\nValid signs required to accept the file (Multisig possibility)\n\n\nExample\n: 1\n\n\n\n\ntitle\n\n\nSite's title, visible in browser title and on ZeroHello.\n\n\nExample\n: ZeroTalk\n\n\n\n\nuser_contents\n\n\nRules of allowed user content of current directory.\n\n\n\n\n\n\n\n\nNode\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\ncert_signers\n\n\nAccepted domains and it's valid signer's addresses\n\n\n\n\n\n\npermission_rules\n\n\nAllowed file names and total directory size based on cert domain or authorization method\n\n\n\n\n\n\npermissions\n\n\nPer-user permissions. (false = banned user)\n\n\n\n\n\n\n\n\nExample\n:\n\n\n  \nuser_contents\n: {\n    \ncert_signers\n: {\n      \nzeroid.bit\n: [ \n1iD5ZQJMNXu43w1qLB8sfdHVKppVMduGz\n ]\n    },\n    \npermission_rules\n: {\n      \n.*\n: {\n        \nfiles_allowed\n: \ndata.json\n,\n        \nmax_size\n: 10000\n      },\n      \nbitid/.*@zeroid.bit\n: { \nmax_size\n: 40000 },\n      \nbitmsg/.*@zeroid.bit\n: { \nmax_size\n: 15000 }\n    },\n    \npermissions\n: {\n      \nbad@zeroid.bit\n: false,\n      \nnofish@zeroid.bit\n: { \nmax_size\n: 100000 }\n    }\n  }\n\n\n\n\n\n\nviewport\n\n\nContent for the viewport meta tag. (Used for mobile-friendly pages)\n\n\nExample\n: width=device-width, initial-scale=1.0", 
            "title": "\u0421\u0442\u0440\u0443\u043a\u0442\u0443\u0440\u0430 \u0444\u0430\u0439\u043b\u0430 content.json"
        }, 
        {
            "location": "/site_development/content_json/#structure-of-contentjson", 
            "text": "Every ZeroNet site will have a  content.json  file. ( Example content.json file )  This file will carry, amont other things, a list of all files on your site and a signature created with your private key. This is done to avoid file tampering (ie: only you, or people you trust, can update the site content).  Here is a list of supported keys:", 
            "title": "Structure of content.json"
        }, 
        {
            "location": "/site_development/content_json/#generated-automatically", 
            "text": "", 
            "title": "Generated automatically"
        }, 
        {
            "location": "/site_development/content_json/#address", 
            "text": "Your site address  Example : 1TaLk3zM7ZRskJvrh3ZNCDVGXvkJusPKQ", 
            "title": "address"
        }, 
        {
            "location": "/site_development/content_json/#address_index", 
            "text": "The site's address BIP32 sub-key index of your BIP32 seed. Auto-added when you clone a site. It allows to recover the site privatekey from your BIP32 seed.  Example : 30926910", 
            "title": "address_index"
        }, 
        {
            "location": "/site_development/content_json/#cloned_from", 
            "text": "The site address where the site is cloned from.  Example : 1BLogC9LN4oPDcruNz3qo1ysa133E9AGg8", 
            "title": "cloned_from"
        }, 
        {
            "location": "/site_development/content_json/#files", 
            "text": "Size and sha512 hash of automatically downloaded files contained in your site. Automatically added by the command  zeronet.py siteSign siteaddress privatekey .  Example :       css/all.css : {\n       sha512 :  869b09328f07bac538c313c4702baa5276544346418378199fa5cef644c139e8 ,\n       size : 148208", 
            "title": "files"
        }, 
        {
            "location": "/site_development/content_json/#files_optional", 
            "text": "Size and sha512 hash of optional files contained in your site. Automatically added by the command  zeronet.py siteSign siteaddress privatekey .  Example :       data/myvideo.mp4 : {\n       sha512 :  538c09328aa52765443464135cef644c144346418378199fa5cef61837819538 ,\n       size : 832103", 
            "title": "files_optional"
        }, 
        {
            "location": "/site_development/content_json/#modified", 
            "text": "Time when the content.json was generated.  Example : 1425857522.076", 
            "title": "modified"
        }, 
        {
            "location": "/site_development/content_json/#sign-deprecated", 
            "text": "ECDSA sign of the content.json file content. (keys sorted, without whitespace and the  sign  and  signers_sign  nodes). For backward compatibility, will be removed soon.  Example :     sign : [\n    43117356513690007125104018825100786623580298637039067305407092800990252156956,\n    94139380599940414070721501960181245022427741524702752954181461080408625270000\n  ],", 
            "title": "sign (deprecated)"
        }, 
        {
            "location": "/site_development/content_json/#signers_sign", 
            "text": "Possible signers address for the root content.json signed using the site address private key. (Multisig possibility)  Format of the signed string : [signers_required]:[signer address],[signer address]  Example :  HKNDz9IUHcBc/l2Jm2Bl70XQDL9HYHhJ2hUdg8AMyunACLgxyXBr7EW1/ME4hGkaFZSFmIxlInmxH+BrMVXbnLw=", 
            "title": "signers_sign"
        }, 
        {
            "location": "/site_development/content_json/#signs", 
            "text": "ECDSA signs for the the content.json file content. (keys sorted, without whitespace and the  sign  and  signers_sign  nodes).  Example :     signs : {\n     1TaLk3zM7ZRskJvrh3ZNCDVGXvkJusPKQ :  G6/QXFKvACPQ7LhoZG4fgqmeOSK99vGM2arVWkm9pV/WPCfc2ulv6iuQnuzw4v5z82qWswcRq907VPdBsdb9VRo= \n  },", 
            "title": "signs"
        }, 
        {
            "location": "/site_development/content_json/#zeronet_version", 
            "text": "ZeroNet version used to generate content.json file.  Example : 0.2.5", 
            "title": "zeronet_version"
        }, 
        {
            "location": "/site_development/content_json/#settings", 
            "text": "", 
            "title": "Settings"
        }, 
        {
            "location": "/site_development/content_json/#background-color", 
            "text": "Background color of the wrapper  Example : #F5F5F5", 
            "title": "background-color"
        }, 
        {
            "location": "/site_development/content_json/#cloneable", 
            "text": "Allow to clone the site if  true .  To make your site properly cloneable you have to add data files for clean start (eg. without any blog posts).\nTo do this you have to add  -default  postfix to your data files and directories.\nOn the cloning process every file and directory is skipped if it has  -default  postfixed alternative and then the  -default  postfix will be removed from the affected files and directories.", 
            "title": "cloneable"
        }, 
        {
            "location": "/site_development/content_json/#description", 
            "text": "Description of your site, displayed under site title on ZeroHello.  Example : Decentralized forum demo", 
            "title": "description"
        }, 
        {
            "location": "/site_development/content_json/#domain", 
            "text": "Namecoin domain name of your site. ZeroHello will link to this if the user has Zeroname plugin enabled.  Example : Blog.ZeroNetwork.bit", 
            "title": "domain"
        }, 
        {
            "location": "/site_development/content_json/#ignore", 
            "text": "Ignore files from signing matching this preg pattern  Example :  ((js|css)/(?!all.(js|css))|data/users/.*)  (ignore all js and css files except all.js and all.css and don't add anything from data/users/ directory)", 
            "title": "ignore"
        }, 
        {
            "location": "/site_development/content_json/#includes", 
            "text": "Include an another content.json  Example :  {\n   data/users/content.json : {\n     signers : [ # Possible signers address for the file\n       1LSxsKfC9S9TVXGGNSM3vPHjyW82jgCX5f \n    ],\n     signers_required : 1 # Valid signs required to accept the file (Multisig possibility),\n     files_allowed :  data.json , # Preg pattern for the allowed files in the include file\n     includes_allowed : false, # Nested includes allowed or not\n     max_size : 10000, # Max sum filesize allowed in the include (in bytes)\n  }\n}", 
            "title": "includes"
        }, 
        {
            "location": "/site_development/content_json/#merged_type", 
            "text": "Data source for specified merger site type  Example :  ZeroMe", 
            "title": "merged_type"
        }, 
        {
            "location": "/site_development/content_json/#optional", 
            "text": "Preg pattern of optional files  Example :  (data/mp4/.*|updater/.*)  (everything in data/mp4 and updater directory is optional)", 
            "title": "optional"
        }, 
        {
            "location": "/site_development/content_json/#signs_required", 
            "text": "Valid signs required to accept the file (Multisig possibility)  Example : 1", 
            "title": "signs_required"
        }, 
        {
            "location": "/site_development/content_json/#title", 
            "text": "Site's title, visible in browser title and on ZeroHello.  Example : ZeroTalk", 
            "title": "title"
        }, 
        {
            "location": "/site_development/content_json/#user_contents", 
            "text": "Rules of allowed user content of current directory.     Node  Description      cert_signers  Accepted domains and it's valid signer's addresses    permission_rules  Allowed file names and total directory size based on cert domain or authorization method    permissions  Per-user permissions. (false = banned user)     Example :     user_contents : {\n     cert_signers : {\n       zeroid.bit : [  1iD5ZQJMNXu43w1qLB8sfdHVKppVMduGz  ]\n    },\n     permission_rules : {\n       .* : {\n         files_allowed :  data.json ,\n         max_size : 10000\n      },\n       bitid/.*@zeroid.bit : {  max_size : 40000 },\n       bitmsg/.*@zeroid.bit : {  max_size : 15000 }\n    },\n     permissions : {\n       bad@zeroid.bit : false,\n       nofish@zeroid.bit : {  max_size : 100000 }\n    }\n  }", 
            "title": "user_contents"
        }, 
        {
            "location": "/site_development/content_json/#viewport", 
            "text": "Content for the viewport meta tag. (Used for mobile-friendly pages)  Example : width=device-width, initial-scale=1.0", 
            "title": "viewport"
        }, 
        {
            "location": "/site_development/dbschema_json/", 
            "text": "Structure of dbschema.json\n\n\nExample dbschema.json file\n\n\nThe code below will do the following:\n\n\n\n\nIf an updated data/users/*/data.json file is received (eg.: a user posted something):\n\n\nEvery row in \ndata[\"topics\"]\n is loaded to the \ntopic\n table\n\n\nEvery key in \ndata[\"comment_votes\"]\n is loaded to the \ncomment_vote\n table as \ncomment_hash\n col and the values stored in same line as \nvote\n\n\nIf an updated data/users/content.json file is received (eg.: new user created):\n\n\nThe \n\"user_id\", \"user_name\", \"max_size\", \"added\"\n key in value of \ncontent[\"include\"]\n is loaded into the \nuser\n table and the key is stored as \npath\n\n\n\n\n\n{\n  \ndb_name\n: \nZeroTalk\n, # Database name (only used for debugging)\n  \ndb_file\n: \ndata/users/zerotalk.db\n, # Database file relative to site's directory\n  \nversion\n: 2, # 1 = Json table has path column that includes directory and filename\n                # 2 = Json table has seperate directory and file_name column\n                # 3 = Same as version 2, but also has site column (for merger sites)\n  \nmaps\n: { # Json to database mappings\n    \n.*/data.json\n: { # Regex pattern of file relative to db_file\n      \nto_table\n: [ # Load values to table\n        {\n          \nnode\n: \ntopics\n, # Reading data.json[topics] key value\n          \ntable\n: \ntopic\n # Feeding data to topic table\n        },\n        {\n          \nnode\n: \ncomment_votes\n, # Reading data.json[comment_votes] key value\n          \ntable\n: \ncomment_vote\n, # Feeding data to comment_vote table\n          \nkey_col\n: \ncomment_hash\n,\n            # data.json[comment_votes] is a simple dict, the keys of the\n            # dict are loaded to comment_vote table comment_hash column\n\n          \nval_col\n: \nvote\n\n            # The data.json[comment_votes] dict values loaded to comment_vote table vote column\n\n        }\n      ],\n      \nto_keyvalue\n: [\nnext_message_id\n, \nnext_topic_id\n]\n        # Load data.json[next_topic_id] to keyvalues table\n        # (key: next_message_id, value: data.json[next_message_id] value)\n\n    },\n    \ncontent.json\n: {\n      \nto_table\n: [\n        {\n          \nnode\n: \nincludes\n,\n          \ntable\n: \nuser\n,\n          \nkey_col\n: \npath\n,\n          \nimport_cols\n: [\nuser_id\n, \nuser_name\n, \nmax_size\n, \nadded\n],\n            # Only import these columns to user table\n          \nreplaces\n: {\n            \npath\n: {\ncontent.json\n: \ndata.json\n}\n              # Replace content.json to data.json in the\n              # value of path column (required for joining)\n          }\n        }\n      ],\n      \nto_json_table\n: [ \ncert_auth_type\n, \ncert_user_id\n ]  # Save cert_auth_type and cert_user_id directly to json table (easier and faster data queries)\n    }\n  },\n  \ntables\n: { # Table definitions\n    \ntopic\n: { # Define topic table\n      \ncols\n: [ # Cols of the table\n        [\ntopic_id\n, \nINTEGER\n],\n        [\ntitle\n, \nTEXT\n],\n        [\nbody\n, \nTEXT\n],\n        [\ntype\n, \nTEXT\n],\n        [\nparent_topic_hash\n, \nTEXT\n],\n        [\nadded\n, \nDATETIME\n],\n        [\njson_id\n, \nINTEGER REFERENCES json (json_id)\n]\n      ],\n      \nindexes\n: [\nCREATE UNIQUE INDEX topic_key ON topic(topic_id, json_id)\n],\n        # Indexes automatically created\n\n      \nschema_changed\n: 1426195822\n        # Last time of the schema changed, if the client's version is different then\n        # automatically destroy the old, create the new table then reload the data into it\n\n    },\n    \ncomment_vote\n: {\n      \ncols\n: [\n        [\ncomment_hash\n, \nTEXT\n],\n        [\nvote\n, \nINTEGER\n],\n        [\njson_id\n, \nINTEGER REFERENCES json (json_id)\n]\n      ],\n      \nindexes\n: [\nCREATE UNIQUE INDEX comment_vote_key ON comment_vote(comment_hash, json_id)\n, \nCREATE INDEX comment_vote_hash ON comment_vote(comment_hash)\n],\n      \nschema_changed\n: 1426195826\n    },\n    \nuser\n: {\n      \ncols\n: [\n        [\nuser_id\n, \nINTEGER\n],\n        [\nuser_name\n, \nTEXT\n],\n        [\nmax_size\n, \nINTEGER\n],\n        [\npath\n, \nTEXT\n],\n        [\nadded\n, \nINTEGER\n],\n        [\njson_id\n, \nINTEGER REFERENCES json (json_id)\n]\n      ],\n      \nindexes\n: [\nCREATE UNIQUE INDEX user_id ON user(user_id)\n, \nCREATE UNIQUE INDEX user_path ON user(path)\n],\n      \nschema_changed\n: 1426195825\n    },\n    \njson\n: {  # Json table format only required if you have specified to_json_table pattern anywhere\n        \ncols\n: [\n            [\njson_id\n, \nINTEGER PRIMARY KEY AUTOINCREMENT\n],\n            [\ndirectory\n, \nTEXT\n],\n            [\nfile_name\n, \nTEXT\n],\n            [\ncert_auth_type\n, \nTEXT\n],\n            [\ncert_user_id\n, \nTEXT\n]\n        ],\n        \nindexes\n: [\nCREATE UNIQUE INDEX path ON json(directory, site, file_name)\n],\n        \nschema_changed\n: 4\n    }\n  }\n}\n\n\n\n\nExample for data.json file\n\n\n{\n  \nnext_topic_id\n: 2,\n  \ntopics\n: [\n    {\n      \ntopic_id\n: 1,\n      \ntitle\n: \nNewtopic\n,\n      \nbody\n: \nTopic!\n,\n      \nadded\n: 1426628540,\n      \nparent_topic_hash\n: \n5@2\n\n    }\n  ],\n  \nnext_message_id\n: 19,\n  \ncomments\n: {\n    \n1@2\n: [\n      {\n        \ncomment_id\n: 1,\n        \nbody\n: \nNew user test!\n,\n        \nadded\n: 1423442049\n      }\n    ],\n    \n1@13\n: [\n      {\n        \ncomment_id\n: 2,\n        \nbody\n: \nhello\n,\n        \nadded\n: 1424653288\n      },\n      {\n        \ncomment_id\n: 13,\n        \nbody\n: \ntest 123\n,\n        \nadded\n: 1426463715\n      }\n    ]\n  },\n  \ntopic_votes\n: {\n    \n1@2\n: 1,\n    \n4@2\n: 1,\n    \n2@2\n: 1,\n    \n1@5\n: 1,\n    \n1@6\n: 1,\n    \n3@2\n: 1,\n    \n1@13\n: 1,\n    \n4@5\n: 1\n  },\n  \ncomment_votes\n: {\n    \n5@5\n: 1,\n    \n2@12\n: 1,\n    \n1@12\n: 1,\n    \n33@2\n: 1,\n    \n45@2\n: 1,\n    \n12@5\n: 1,\n    \n34@2\n: 1,\n    \n46@2\n: 1\n  }\n}\n\n\n\n\nExample for content.json file\n\n\n{\n  \nfiles\n: {},\n  \nignore\n: \n.*/.*\n,\n  \nincludes\n: {\n    \n13v1FwKcq7dx2UPruFcRcqd8s7VBjvoWJW/content.json\n: {\n      \nadded\n: 1426683897,\n      \nfiles_allowed\n: \ndata.json\n,\n      \nincludes_allowed\n: false,\n      \nmax_size\n: 10000,\n      \nsigners\n: [\n        \n13v1FwKcq7dx2UPruFcRcqd8s7VBjvoWJW\n\n      ],\n      \nsigners_required\n: 1,\n      \nuser_id\n: 15,\n      \nuser_name\n: \nmeginthelloka\n\n    },\n    \n15WGMVViswrF13sAKb7je6oX3UhXavBxxQ/content.json\n: {\n      \nadded\n: 1426687209,\n      \nfiles_allowed\n: \ndata.json\n,\n      \nincludes_allowed\n: false,\n      \nmax_size\n: 10000,\n      \nsigners\n: [\n        \n15WGMVViswrF13sAKb7je6oX3UhXavBxxQ\n\n      ],\n      \nsigners_required\n: 1,\n      \nuser_id\n: 18,\n      \nuser_name\n: \nhabla\n\n    }\n  }\n}", 
            "title": "\u0421\u0442\u0440\u0443\u043a\u0442\u0443\u0440\u0430 \u0444\u0430\u0439\u043b\u0430 dbschema.json"
        }, 
        {
            "location": "/site_development/dbschema_json/#structure-of-dbschemajson", 
            "text": "Example dbschema.json file  The code below will do the following:   If an updated data/users/*/data.json file is received (eg.: a user posted something):  Every row in  data[\"topics\"]  is loaded to the  topic  table  Every key in  data[\"comment_votes\"]  is loaded to the  comment_vote  table as  comment_hash  col and the values stored in same line as  vote  If an updated data/users/content.json file is received (eg.: new user created):  The  \"user_id\", \"user_name\", \"max_size\", \"added\"  key in value of  content[\"include\"]  is loaded into the  user  table and the key is stored as  path   \n{\n   db_name :  ZeroTalk , # Database name (only used for debugging)\n   db_file :  data/users/zerotalk.db , # Database file relative to site's directory\n   version : 2, # 1 = Json table has path column that includes directory and filename\n                # 2 = Json table has seperate directory and file_name column\n                # 3 = Same as version 2, but also has site column (for merger sites)\n   maps : { # Json to database mappings\n     .*/data.json : { # Regex pattern of file relative to db_file\n       to_table : [ # Load values to table\n        {\n           node :  topics , # Reading data.json[topics] key value\n           table :  topic  # Feeding data to topic table\n        },\n        {\n           node :  comment_votes , # Reading data.json[comment_votes] key value\n           table :  comment_vote , # Feeding data to comment_vote table\n           key_col :  comment_hash ,\n            # data.json[comment_votes] is a simple dict, the keys of the\n            # dict are loaded to comment_vote table comment_hash column\n\n           val_col :  vote \n            # The data.json[comment_votes] dict values loaded to comment_vote table vote column\n\n        }\n      ],\n       to_keyvalue : [ next_message_id ,  next_topic_id ]\n        # Load data.json[next_topic_id] to keyvalues table\n        # (key: next_message_id, value: data.json[next_message_id] value)\n\n    },\n     content.json : {\n       to_table : [\n        {\n           node :  includes ,\n           table :  user ,\n           key_col :  path ,\n           import_cols : [ user_id ,  user_name ,  max_size ,  added ],\n            # Only import these columns to user table\n           replaces : {\n             path : { content.json :  data.json }\n              # Replace content.json to data.json in the\n              # value of path column (required for joining)\n          }\n        }\n      ],\n       to_json_table : [  cert_auth_type ,  cert_user_id  ]  # Save cert_auth_type and cert_user_id directly to json table (easier and faster data queries)\n    }\n  },\n   tables : { # Table definitions\n     topic : { # Define topic table\n       cols : [ # Cols of the table\n        [ topic_id ,  INTEGER ],\n        [ title ,  TEXT ],\n        [ body ,  TEXT ],\n        [ type ,  TEXT ],\n        [ parent_topic_hash ,  TEXT ],\n        [ added ,  DATETIME ],\n        [ json_id ,  INTEGER REFERENCES json (json_id) ]\n      ],\n       indexes : [ CREATE UNIQUE INDEX topic_key ON topic(topic_id, json_id) ],\n        # Indexes automatically created\n\n       schema_changed : 1426195822\n        # Last time of the schema changed, if the client's version is different then\n        # automatically destroy the old, create the new table then reload the data into it\n\n    },\n     comment_vote : {\n       cols : [\n        [ comment_hash ,  TEXT ],\n        [ vote ,  INTEGER ],\n        [ json_id ,  INTEGER REFERENCES json (json_id) ]\n      ],\n       indexes : [ CREATE UNIQUE INDEX comment_vote_key ON comment_vote(comment_hash, json_id) ,  CREATE INDEX comment_vote_hash ON comment_vote(comment_hash) ],\n       schema_changed : 1426195826\n    },\n     user : {\n       cols : [\n        [ user_id ,  INTEGER ],\n        [ user_name ,  TEXT ],\n        [ max_size ,  INTEGER ],\n        [ path ,  TEXT ],\n        [ added ,  INTEGER ],\n        [ json_id ,  INTEGER REFERENCES json (json_id) ]\n      ],\n       indexes : [ CREATE UNIQUE INDEX user_id ON user(user_id) ,  CREATE UNIQUE INDEX user_path ON user(path) ],\n       schema_changed : 1426195825\n    },\n     json : {  # Json table format only required if you have specified to_json_table pattern anywhere\n         cols : [\n            [ json_id ,  INTEGER PRIMARY KEY AUTOINCREMENT ],\n            [ directory ,  TEXT ],\n            [ file_name ,  TEXT ],\n            [ cert_auth_type ,  TEXT ],\n            [ cert_user_id ,  TEXT ]\n        ],\n         indexes : [ CREATE UNIQUE INDEX path ON json(directory, site, file_name) ],\n         schema_changed : 4\n    }\n  }\n}", 
            "title": "Structure of dbschema.json"
        }, 
        {
            "location": "/site_development/dbschema_json/#example-for-datajson-file", 
            "text": "{\n   next_topic_id : 2,\n   topics : [\n    {\n       topic_id : 1,\n       title :  Newtopic ,\n       body :  Topic! ,\n       added : 1426628540,\n       parent_topic_hash :  5@2 \n    }\n  ],\n   next_message_id : 19,\n   comments : {\n     1@2 : [\n      {\n         comment_id : 1,\n         body :  New user test! ,\n         added : 1423442049\n      }\n    ],\n     1@13 : [\n      {\n         comment_id : 2,\n         body :  hello ,\n         added : 1424653288\n      },\n      {\n         comment_id : 13,\n         body :  test 123 ,\n         added : 1426463715\n      }\n    ]\n  },\n   topic_votes : {\n     1@2 : 1,\n     4@2 : 1,\n     2@2 : 1,\n     1@5 : 1,\n     1@6 : 1,\n     3@2 : 1,\n     1@13 : 1,\n     4@5 : 1\n  },\n   comment_votes : {\n     5@5 : 1,\n     2@12 : 1,\n     1@12 : 1,\n     33@2 : 1,\n     45@2 : 1,\n     12@5 : 1,\n     34@2 : 1,\n     46@2 : 1\n  }\n}", 
            "title": "Example for data.json file"
        }, 
        {
            "location": "/site_development/dbschema_json/#example-for-contentjson-file", 
            "text": "{\n   files : {},\n   ignore :  .*/.* ,\n   includes : {\n     13v1FwKcq7dx2UPruFcRcqd8s7VBjvoWJW/content.json : {\n       added : 1426683897,\n       files_allowed :  data.json ,\n       includes_allowed : false,\n       max_size : 10000,\n       signers : [\n         13v1FwKcq7dx2UPruFcRcqd8s7VBjvoWJW \n      ],\n       signers_required : 1,\n       user_id : 15,\n       user_name :  meginthelloka \n    },\n     15WGMVViswrF13sAKb7je6oX3UhXavBxxQ/content.json : {\n       added : 1426687209,\n       files_allowed :  data.json ,\n       includes_allowed : false,\n       max_size : 10000,\n       signers : [\n         15WGMVViswrF13sAKb7je6oX3UhXavBxxQ \n      ],\n       signers_required : 1,\n       user_id : 18,\n       user_name :  habla \n    }\n  }\n}", 
            "title": "Example for content.json file"
        }, 
        {
            "location": "/help_zeronet/contributing/", 
            "text": "Contributing to ZeroNet\n\n\n\n\nWrite about ZeroNet. You can add your article to \nZeroTalk\n.\n\n\nJoin our IRC channel, \n#zeronet @ FreeNode\n and help to answer questions.\n\n\nCreate new ZeroNet sites: The network is worth nothing without content, so we need You to make it succeed. Content is king!\n\n\nHelp to develop ZeroNet: If you know python you can pick a task from\n   \ngithub issues\n or develop your own idea.\n   Before you start anything big please, open a \nnew discussion\n,\n   so you can make sure nobody is working on it already and we can share our ideas to make the best out of it.\n\n\nYou can \ndonate\n bitcoins to support ZeroNet.\n\n\n\n\nCoding standards if you want to collaborate to ZeroNet\n\n\n\n\nFollow \nPEP8\n\n\nSimple is better than complex\n\n\nPremature optimization is the root of all evil\n\n\n\n\nNaming\n\n\n\n\nClassNames: Capitalized, CamelCased\n\n\nfunctionNames: starts with lowercase, camelCased\n\n\nvariable_names: lowercased, under_scored\n\n\n\n\nVariables\n\n\n\n\nfile_path: File path relative to working dir (data/17ib6teRqdVgjB698T4cD1zDXKgPqpkrMg/css/all.css)\n\n\ninner_path: File relative to site dir (css/all.css)\n\n\nfile_name: all.css\n\n\nfile: Python file object\n\n\nprivatekey: Private key for the site (without _)\n\n\n\n\nSource files directories and naming\n\n\n\n\nOne class per file is preferred\n\n\nSource file name and directory comes from ClassName: WorkerManager class = Worker/WorkerManager.py", 
            "title": "\u0412\u043a\u043b\u0430\u0434 \u0432 ZeroNet"
        }, 
        {
            "location": "/help_zeronet/contributing/#contributing-to-zeronet", 
            "text": "Write about ZeroNet. You can add your article to  ZeroTalk .  Join our IRC channel,  #zeronet @ FreeNode  and help to answer questions.  Create new ZeroNet sites: The network is worth nothing without content, so we need You to make it succeed. Content is king!  Help to develop ZeroNet: If you know python you can pick a task from\n    github issues  or develop your own idea.\n   Before you start anything big please, open a  new discussion ,\n   so you can make sure nobody is working on it already and we can share our ideas to make the best out of it.  You can  donate  bitcoins to support ZeroNet.", 
            "title": "Contributing to ZeroNet"
        }, 
        {
            "location": "/help_zeronet/contributing/#coding-standards-if-you-want-to-collaborate-to-zeronet", 
            "text": "Follow  PEP8  Simple is better than complex  Premature optimization is the root of all evil", 
            "title": "Coding standards if you want to collaborate to ZeroNet"
        }, 
        {
            "location": "/help_zeronet/contributing/#naming", 
            "text": "ClassNames: Capitalized, CamelCased  functionNames: starts with lowercase, camelCased  variable_names: lowercased, under_scored", 
            "title": "Naming"
        }, 
        {
            "location": "/help_zeronet/contributing/#variables", 
            "text": "file_path: File path relative to working dir (data/17ib6teRqdVgjB698T4cD1zDXKgPqpkrMg/css/all.css)  inner_path: File relative to site dir (css/all.css)  file_name: all.css  file: Python file object  privatekey: Private key for the site (without _)", 
            "title": "Variables"
        }, 
        {
            "location": "/help_zeronet/contributing/#source-files-directories-and-naming", 
            "text": "One class per file is preferred  Source file name and directory comes from ClassName: WorkerManager class = Worker/WorkerManager.py", 
            "title": "Source files directories and naming"
        }, 
        {
            "location": "/help_zeronet/network_protocol/", 
            "text": "ZeroNet network protocol\n\n\n\n\nEvery message is encoded using \nMessagePack\n\n\nEvery request has 3 parameter:\n\n\ncmd\n: The request command\n\n\nreq_id\n: The request's unique id (simple, incremented nonce), the client has to include this when reply to the command\n\n\nparams\n: Parameters for the request\n\n\n\n\n\n\nExample request: \n{\"cmd\": \"getFile\", \"req_id\": 1, \"params:\" {\"site\": \"1EU...\", \"inner_path\": \"content.json\", \"location\": 0}}\n\n\nExample response: \n{\"cmd\": \"response\", \"to\": 1, \"body\": \"content.json content\", \"location\": 1132, \"site\": 1132}\n\n\nExample error response: \n{\"cmd\": \"response\", \"to\": 1, \"error\": \"Unknown site\"}\n\n\n\n\nPeer requests\n\n\ngetFile \nsite\n, \ninner_path\n, \nlocation\n\n\nRequest a file from the client\n\n\n\n\n\n\n\n\nParameter\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nsite\n\n\nSite address (example: 1EU1tbG9oC1A8jz2ouVwGZyQ5asrNsE4Vr)\n\n\n\n\n\n\ninner_path\n\n\nFile path relative to site directory\n\n\n\n\n\n\nlocation\n\n\nRequest file from this byte (max 512 bytes got sent in a request, so you need multiple requests for larger files)\n\n\n\n\n\n\n\n\nReturn\n:\n\n\n\n\n\n\n\n\nReturn key\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nbody\n\n\nThe requested file content\n\n\n\n\n\n\nlocation\n\n\nThe location of the last byte sent\n\n\n\n\n\n\nsize\n\n\nTotal size of the file\n\n\n\n\n\n\n\n\n\n\nping\n\n\nChecks if the client is still alive\n\n\nReturn\n:\n\n\n\n\n\n\n\n\nReturn key\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nbody\n\n\nPong\n\n\n\n\n\n\n\n\n\n\npex \nsite\n, \npeers\n, \nneed\n\n\nExchange peers with the client.\nPeers packed to 6 bytes (4byte IP using inet_ntoa + 2byte for port)\n\n\n\n\n\n\n\n\nParameter\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nsite\n\n\nSite address (example: 1EU1tbG9oC1A8jz2ouVwGZyQ5asrNsE4Vr)\n\n\n\n\n\n\npeers\n\n\nList of peers that the requester has (packed)\n\n\n\n\n\n\nneed\n\n\nNumber of peers the requester want\n\n\n\n\n\n\n\n\nReturn\n:\n\n\n\n\n\n\n\n\nReturn key\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\npeers\n\n\nList of peer he has for the site (packed)\n\n\n\n\n\n\n\n\n\n\nupdate \nsite\n, \ninner_path\n, \nbody\n\n\nUpdate a site file.\n\n\n\n\n\n\n\n\nParameter\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nsite\n\n\nSite address (example: 1EU1tbG9oC1A8jz2ouVwGZyQ5asrNsE4Vr)\n\n\n\n\n\n\ninner_path\n\n\nFile path relative to site directory\n\n\n\n\n\n\nbody\n\n\nFull content of the updated file\n\n\n\n\n\n\n\n\nReturn\n:\n\n\n\n\n\n\n\n\nReturn key\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nok\n\n\nThanks message on successful update", 
            "title": "\u0421\u0435\u0442\u0435\u0432\u043e\u0439 \u043f\u0440\u043e\u0442\u043e\u043a\u043e\u043b"
        }, 
        {
            "location": "/help_zeronet/network_protocol/#zeronet-network-protocol", 
            "text": "Every message is encoded using  MessagePack  Every request has 3 parameter:  cmd : The request command  req_id : The request's unique id (simple, incremented nonce), the client has to include this when reply to the command  params : Parameters for the request    Example request:  {\"cmd\": \"getFile\", \"req_id\": 1, \"params:\" {\"site\": \"1EU...\", \"inner_path\": \"content.json\", \"location\": 0}}  Example response:  {\"cmd\": \"response\", \"to\": 1, \"body\": \"content.json content\", \"location\": 1132, \"site\": 1132}  Example error response:  {\"cmd\": \"response\", \"to\": 1, \"error\": \"Unknown site\"}", 
            "title": "ZeroNet network protocol"
        }, 
        {
            "location": "/help_zeronet/network_protocol/#peer-requests", 
            "text": "", 
            "title": "Peer requests"
        }, 
        {
            "location": "/help_zeronet/network_protocol/#getfile-site-inner_path-location", 
            "text": "Request a file from the client     Parameter  Description      site  Site address (example: 1EU1tbG9oC1A8jz2ouVwGZyQ5asrNsE4Vr)    inner_path  File path relative to site directory    location  Request file from this byte (max 512 bytes got sent in a request, so you need multiple requests for larger files)     Return :     Return key  Description      body  The requested file content    location  The location of the last byte sent    size  Total size of the file", 
            "title": "getFile site, inner_path, location"
        }, 
        {
            "location": "/help_zeronet/network_protocol/#ping", 
            "text": "Checks if the client is still alive  Return :     Return key  Description      body  Pong", 
            "title": "ping"
        }, 
        {
            "location": "/help_zeronet/network_protocol/#pex-site-peers-need", 
            "text": "Exchange peers with the client.\nPeers packed to 6 bytes (4byte IP using inet_ntoa + 2byte for port)     Parameter  Description      site  Site address (example: 1EU1tbG9oC1A8jz2ouVwGZyQ5asrNsE4Vr)    peers  List of peers that the requester has (packed)    need  Number of peers the requester want     Return :     Return key  Description      peers  List of peer he has for the site (packed)", 
            "title": "pex site, peers, need"
        }, 
        {
            "location": "/help_zeronet/network_protocol/#update-site-inner_path-body", 
            "text": "Update a site file.     Parameter  Description      site  Site address (example: 1EU1tbG9oC1A8jz2ouVwGZyQ5asrNsE4Vr)    inner_path  File path relative to site directory    body  Full content of the updated file     Return :     Return key  Description      ok  Thanks message on successful update", 
            "title": "update site, inner_path, body"
        }, 
        {
            "location": "/help_zeronet/donate/", 
            "text": "Help to keep ZeroNet development alive\n\n\nZeroNet: 2016 third quarter development\n\n\n\n\n\n\nGeneral donation towards ZeroNet development\n\n\n\n\nor using PayPal: \nhello@zeronet.io\n or \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nBitmessage support\n\n\n\n\n\n\nSend and receive Bitmessage messages using local client's XMLRPC API interface\n\n\n\n\nBenefits:\n\n\n\n\nSend your permission request to site owner via bitmessage\n\n\nPossible private messaging/commenting webui integration to sites\n\n\n\n\nGithub issue\n\n\n\n\nNamecoin domain support\n (done in version 0.2.8)\n\n\n\n\nUse Namecoin domain names to access sites\n\n\n\n\nBenefits:\n\n\n\n\nEasier to remember site addresses\n\n\n\n\nGithub issue\n\n\n\n\nDHT support\n\n\n\n\n\n\nPeer discovery using DHT\n\n\n\n\nBenefits:\n\n\n\n\nPeer discovery no longer relies on torrent network\n\n\nIpv6 and Tor peer discovery\n\n\n\n\nGithub issue\n\n\n\n\nPrivate sites\n\n\n\n\n\n\nPassworded or public key based peer auth to sites\n\n\n\n\nBenefits:\n\n\n\n\nSecure control over peers who has access to your site\n\n\n\n\nGithub issue\n\n\n\n\nFull Tor support\n (done in version 0.3.5)\n\n\n\n\nAllow to seed sites and connect other peers using Tor network (Probably depends on DHT support)\n\n\n\n\nBenefits:\n\n\n\n\nHiding your IP when distributing new content or downloading site\n\n\n\n\nGithub issue\n\n\n\n\nMultiuser proxy support\n (done in version 0.2.7)\n\n\n\n\nUser login/logout using bip32 master seed\n\n\n\n\nBenefits:\n\n\n\n\nMakes open ZeroNet proxies usable\n\n\nUse local ZeroNet more than one user\n\n\n\n\nGithub issue\n\n\n\n\nWhere does the donation go?\n\n\nThe task's received donation goes directly to the developer(s) who successfully and properly integrates the feature (please add your plans and ideas to the issue before you start working on anything big).\n\n\nSponsors\n\n\n\n\nBetter OSX/Safari compatibility made possible by \nBrowserStack.com", 
            "title": "\u0424\u0438\u043d\u0430\u043d\u0441\u043e\u0432\u0430\u044f \u043f\u043e\u043c\u043e\u0449\u044c"
        }, 
        {
            "location": "/help_zeronet/donate/#help-to-keep-zeronet-development-alive", 
            "text": "", 
            "title": "Help to keep ZeroNet development alive"
        }, 
        {
            "location": "/help_zeronet/donate/#zeronet-2016-third-quarter-development", 
            "text": "General donation towards ZeroNet development   or using PayPal:  hello@zeronet.io  or", 
            "title": "ZeroNet: 2016 third quarter development"
        }, 
        {
            "location": "/help_zeronet/donate/#bitmessage-support", 
            "text": "Send and receive Bitmessage messages using local client's XMLRPC API interface   Benefits:   Send your permission request to site owner via bitmessage  Possible private messaging/commenting webui integration to sites   Github issue", 
            "title": "Bitmessage support"
        }, 
        {
            "location": "/help_zeronet/donate/#namecoin-domain-support-done-in-version-028", 
            "text": "Use Namecoin domain names to access sites   Benefits:   Easier to remember site addresses   Github issue", 
            "title": "Namecoin domain support (done in version 0.2.8)"
        }, 
        {
            "location": "/help_zeronet/donate/#dht-support", 
            "text": "Peer discovery using DHT   Benefits:   Peer discovery no longer relies on torrent network  Ipv6 and Tor peer discovery   Github issue", 
            "title": "DHT support"
        }, 
        {
            "location": "/help_zeronet/donate/#private-sites", 
            "text": "Passworded or public key based peer auth to sites   Benefits:   Secure control over peers who has access to your site   Github issue", 
            "title": "Private sites"
        }, 
        {
            "location": "/help_zeronet/donate/#full-tor-support-done-in-version-035", 
            "text": "Allow to seed sites and connect other peers using Tor network (Probably depends on DHT support)   Benefits:   Hiding your IP when distributing new content or downloading site   Github issue", 
            "title": "Full Tor support (done in version 0.3.5)"
        }, 
        {
            "location": "/help_zeronet/donate/#multiuser-proxy-support-done-in-version-027", 
            "text": "User login/logout using bip32 master seed   Benefits:   Makes open ZeroNet proxies usable  Use local ZeroNet more than one user   Github issue", 
            "title": "Multiuser proxy support (done in version 0.2.7)"
        }, 
        {
            "location": "/help_zeronet/donate/#where-does-the-donation-go", 
            "text": "The task's received donation goes directly to the developer(s) who successfully and properly integrates the feature (please add your plans and ideas to the issue before you start working on anything big).", 
            "title": "Where does the donation go?"
        }, 
        {
            "location": "/help_zeronet/donate/#sponsors", 
            "text": "Better OSX/Safari compatibility made possible by  BrowserStack.com", 
            "title": "Sponsors"
        }
    ]
}